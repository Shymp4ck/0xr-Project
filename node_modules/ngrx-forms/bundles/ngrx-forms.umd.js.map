{"version":3,"file":"ngrx-forms.umd.js","sources":["../../src/actions.ts","../../src/boxing.ts","../../node_modules/tslib/tslib.es6.js","../../src/util.ts","../../src/state.ts","../../src/control/reducer/clear-async-error.ts","../../src/control/reducer/disable.ts","../../src/control/reducer/enable.ts","../../src/control/reducer/focus.ts","../../src/control/reducer/mark-as-dirty.ts","../../src/control/reducer/mark-as-pristine.ts","../../src/control/reducer/mark-as-submitted.ts","../../src/control/reducer/mark-as-touched.ts","../../src/control/reducer/mark-as-unsubmitted.ts","../../src/control/reducer/mark-as-untouched.ts","../../src/control/reducer/reset.ts","../../src/control/reducer/set-async-error.ts","../../src/control/reducer/set-errors.ts","../../src/control/reducer/set-user-defined-property.ts","../../src/control/reducer/set-value.ts","../../src/control/reducer/start-async-validation.ts","../../src/control/reducer/unfocus.ts","../../src/control/reducer.ts","../../src/array/reducer/util.ts","../../src/array/reducer/add-control.ts","../../src/array/reducer/clear-async-error.ts","../../src/array/reducer/disable.ts","../../src/array/reducer/enable.ts","../../src/array/reducer/mark-as-dirty.ts","../../src/array/reducer/mark-as-pristine.ts","../../src/array/reducer/mark-as-submitted.ts","../../src/array/reducer/mark-as-touched.ts","../../src/array/reducer/mark-as-unsubmitted.ts","../../src/array/reducer/mark-as-untouched.ts","../../src/array/reducer/move-control.ts","../../src/array/reducer/remove-control.ts","../../src/array/reducer/reset.ts","../../src/array/reducer/set-async-error.ts","../../src/array/reducer/set-errors.ts","../../src/array/reducer/set-user-defined-property.ts","../../src/array/reducer/set-value.ts","../../src/array/reducer/start-async-validation.ts","../../src/array/reducer/swap-control.ts","../../src/array/reducer.ts","../../src/reducer.ts","../../src/group/reducer/util.ts","../../src/group/reducer/add-control.ts","../../src/group/reducer/clear-async-error.ts","../../src/group/reducer/disable.ts","../../src/group/reducer/enable.ts","../../src/group/reducer/mark-as-dirty.ts","../../src/group/reducer/mark-as-pristine.ts","../../src/group/reducer/mark-as-submitted.ts","../../src/group/reducer/mark-as-touched.ts","../../src/group/reducer/mark-as-unsubmitted.ts","../../src/group/reducer/mark-as-untouched.ts","../../src/group/reducer/remove-control.ts","../../src/group/reducer/reset.ts","../../src/group/reducer/set-async-error.ts","../../src/group/reducer/set-errors.ts","../../src/group/reducer/set-user-defined-property.ts","../../src/group/reducer/set-value.ts","../../src/group/reducer/start-async-validation.ts","../../src/group/reducer.ts","../../src/update-function/util.ts","../../src/update-function/update-array.ts","../../src/update-function/update-group.ts","../../src/update-function/update-recursive.ts","../../src/update-function/set-value.ts","../../src/update-function/set-errors.ts","../../src/update-function/validate.ts","../../src/update-function/enable.ts","../../src/update-function/disable.ts","../../src/update-function/mark-as-dirty.ts","../../src/update-function/mark-as-pristine.ts","../../src/update-function/mark-as-touched.ts","../../src/update-function/mark-as-untouched.ts","../../src/update-function/mark-as-submitted.ts","../../src/update-function/mark-as-unsubmitted.ts","../../src/update-function/focus.ts","../../src/update-function/unfocus.ts","../../src/update-function/add-array-control.ts","../../src/update-function/add-group-control.ts","../../src/update-function/move-array-control.ts","../../src/update-function/swap-array-control.ts","../../src/update-function/remove-array-control.ts","../../src/update-function/remove-group-control.ts","../../src/update-function/set-user-defined-property.ts","../../src/update-function/reset.ts","../../src/update-function/start-async-validation.ts","../../src/update-function/set-async-error.ts","../../src/update-function/clear-async-error.ts","../../src/view-adapter/view-adapter.ts","../../src/view-adapter/checkbox.ts","../../src/view-adapter/default.ts","../../src/view-adapter/number.ts","../../src/view-adapter/select.ts","../../src/view-adapter/select-multiple.ts","../../src/view-adapter/option.ts","../../src/view-adapter/radio.ts","../../src/view-adapter/range.ts","../../src/view-adapter/util.ts","../../src/control/value-converter.ts","../../src/control/directive.ts","../../src/control/local-state-directive.ts","../../src/group/directive.ts","../../src/group/local-state-directive.ts","../../src/status-css-classes.directive.ts","../../src/module.ts","../../public_api.ts","../../ngrx-forms.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\r\nimport { KeyValue, NgrxFormControlId, ValidationErrors } from './state';\r\n\r\n// NOTE: the explicit type declaration for the `TYPE` properties is required\r\n// for the output declarations to properly use the literal string type instead\r\n// of just `string`\r\n\r\nexport class SetValueAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_VALUE' = 'ngrx/forms/SET_VALUE';\r\n  readonly type = SetValueAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly value: TValue,\r\n  ) { }\r\n}\r\n\r\nexport class SetErrorsAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_ERRORS' = 'ngrx/forms/SET_ERRORS';\r\n  readonly type = SetErrorsAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly errors: ValidationErrors,\r\n  ) { }\r\n}\r\n\r\nexport class SetAsyncErrorAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_ASYNC_ERROR' = 'ngrx/forms/SET_ASYNC_ERROR';\r\n  readonly type = SetAsyncErrorAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n    public readonly value: any,\r\n  ) { }\r\n}\r\n\r\nexport class ClearAsyncErrorAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/CLEAR_ASYNC_ERROR' = 'ngrx/forms/CLEAR_ASYNC_ERROR';\r\n  readonly type = ClearAsyncErrorAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n  ) { }\r\n}\r\n\r\nexport class StartAsyncValidationAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/START_ASYNC_VALIDATION' = 'ngrx/forms/START_ASYNC_VALIDATION';\r\n  readonly type = StartAsyncValidationAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsDirtyAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_DIRTY' = 'ngrx/forms/MARK_AS_DIRTY';\r\n  readonly type = MarkAsDirtyAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsPristineAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_PRISTINE' = 'ngrx/forms/MARK_AS_PRISTINE';\r\n  readonly type = MarkAsPristineAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class EnableAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ENABLE' = 'ngrx/forms/ENABLE';\r\n  readonly type = EnableAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class DisableAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/DISABLE' = 'ngrx/forms/DISABLE';\r\n  readonly type = DisableAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsTouchedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_TOUCHED' = 'ngrx/forms/MARK_AS_TOUCHED';\r\n  readonly type = MarkAsTouchedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsUntouchedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_UNTOUCHED' = 'ngrx/forms/MARK_AS_UNTOUCHED';\r\n  readonly type = MarkAsUntouchedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class FocusAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/FOCUS' = 'ngrx/forms/FOCUS';\r\n  readonly type = FocusAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class UnfocusAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/UNFOCUS' = 'ngrx/forms/UNFOCUS';\r\n  readonly type = UnfocusAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsSubmittedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_SUBMITTED' = 'ngrx/forms/MARK_AS_SUBMITTED';\r\n  readonly type = MarkAsSubmittedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsUnsubmittedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_UNSUBMITTED' = 'ngrx/forms/MARK_AS_UNSUBMITTED';\r\n  readonly type = MarkAsUnsubmittedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class AddArrayControlAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ADD_ARRAY_CONTROL' = 'ngrx/forms/ADD_ARRAY_CONTROL';\r\n  readonly type = AddArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly value: TValue,\r\n    public readonly index?: number,\r\n  ) { }\r\n}\r\n\r\nexport class AddGroupControlAction<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ADD_GROUP_CONTROL' = 'ngrx/forms/ADD_GROUP_CONTROL';\r\n  readonly type = AddGroupControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: keyof TValue,\r\n    public readonly value: TValue[TControlKey],\r\n  ) { }\r\n}\r\n\r\nexport class RemoveArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/REMOVE_ARRAY_CONTROL' = 'ngrx/forms/REMOVE_ARRAY_CONTROL';\r\n  readonly type = RemoveArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly index: number,\r\n  ) { }\r\n}\r\n\r\nexport class SwapArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SWAP_ARRAY_CONTROL' = 'ngrx/forms/SWAP_ARRAY_CONTROL';\r\n  readonly type = SwapArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly fromIndex: number,\r\n    public readonly toIndex: number\r\n  ) { }\r\n}\r\n\r\nexport class MoveArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MOVE_ARRAY_CONTROL' = 'ngrx/forms/MOVE_ARRAY_CONTROL';\r\n  readonly type = MoveArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly fromIndex: number,\r\n    public readonly toIndex: number\r\n  ) { }\r\n}\r\n\r\nexport class RemoveGroupControlAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/REMOVE_CONTROL' = 'ngrx/forms/REMOVE_CONTROL';\r\n  readonly type = RemoveGroupControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: keyof TValue,\r\n  ) { }\r\n}\r\n\r\nexport class SetUserDefinedPropertyAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_USER_DEFINED_PROPERTY' = 'ngrx/forms/SET_USER_DEFINED_PROPERTY';\r\n  readonly type = SetUserDefinedPropertyAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n    public readonly value: any,\r\n  ) { }\r\n}\r\n\r\nexport class ResetAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/RESET' = 'ngrx/forms/RESET';\r\n  readonly type = ResetAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport type Actions<TValue> =\r\n  | SetValueAction<TValue>\r\n  | SetErrorsAction\r\n  | SetAsyncErrorAction\r\n  | ClearAsyncErrorAction\r\n  | StartAsyncValidationAction\r\n  | MarkAsDirtyAction\r\n  | MarkAsPristineAction\r\n  | EnableAction\r\n  | DisableAction\r\n  | MarkAsTouchedAction\r\n  | MarkAsUntouchedAction\r\n  | FocusAction\r\n  | UnfocusAction\r\n  | MarkAsSubmittedAction\r\n  | MarkAsUnsubmittedAction\r\n  | (TValue extends KeyValue ? AddGroupControlAction<TValue> : never)\r\n  | RemoveGroupControlAction<TValue>\r\n  | AddArrayControlAction<any>\r\n  | RemoveArrayControlAction\r\n  | SetUserDefinedPropertyAction\r\n  | ResetAction\r\n  | SwapArrayControlAction\r\n  | MoveArrayControlAction\r\n  ;\r\n\r\nexport function isNgrxFormsAction(action: Action) {\r\n  return !!action.type && action.type.startsWith('ngrx/forms/');\r\n}\r\n\r\nexport const ALL_NGRX_FORMS_ACTION_TYPES: Actions<any>['type'][] = [\r\n  SetValueAction.TYPE,\r\n  SetErrorsAction.TYPE,\r\n  SetAsyncErrorAction.TYPE,\r\n  ClearAsyncErrorAction.TYPE,\r\n  StartAsyncValidationAction.TYPE,\r\n  MarkAsDirtyAction.TYPE,\r\n  MarkAsPristineAction.TYPE,\r\n  EnableAction.TYPE,\r\n  DisableAction.TYPE,\r\n  MarkAsTouchedAction.TYPE,\r\n  MarkAsUntouchedAction.TYPE,\r\n  FocusAction.TYPE,\r\n  UnfocusAction.TYPE,\r\n  MarkAsSubmittedAction.TYPE,\r\n  MarkAsUnsubmittedAction.TYPE,\r\n  AddGroupControlAction.TYPE,\r\n  RemoveGroupControlAction.TYPE,\r\n  AddArrayControlAction.TYPE,\r\n  RemoveArrayControlAction.TYPE,\r\n  SetUserDefinedPropertyAction.TYPE,\r\n  ResetAction.TYPE,\r\n  SwapArrayControlAction.TYPE,\r\n  MoveArrayControlAction.TYPE,\r\n];\r\n","export interface Boxed<T> {\r\n  __boxed: '';\r\n  value: T;\r\n}\r\n\r\nexport type UnboxedObject<T> = {\r\n  [prop in keyof T]: Unboxed<T[prop]>;\r\n};\r\n\r\nexport type Unboxed<T> =\r\n  // (ab)use 'symbol' to catch 'any' typing\r\n  T extends Boxed<symbol> ? any\r\n  : T extends Boxed<infer U> ? U\r\n  : T extends symbol[] ? any\r\n  : T extends symbol ? any\r\n  : T extends undefined ? undefined\r\n  : T extends null ? null\r\n  : T extends string ? string\r\n  : T extends number ? number\r\n  : T extends boolean ? boolean\r\n  : UnboxedObject<T>;\r\n\r\nexport function isBoxed<T = any>(value: any): value is Boxed<T> {\r\n  return !!value && (value as Boxed<any>).__boxed === '';\r\n}\r\n\r\nexport function box<T>(value: T): Boxed<T> {\r\n  return {\r\n    __boxed: '',\r\n    value,\r\n  };\r\n}\r\n\r\nexport function unbox<T>(value: T): Unboxed<T> {\r\n  if (['string', 'boolean', 'number', 'undefined'].indexOf(typeof value) >= 0 || value === null || value === undefined) {\r\n    return value as unknown as Unboxed<T>;\r\n  }\r\n\r\n  if (isBoxed<T>(value)) {\r\n    return value.value as unknown as Unboxed<T>;\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return (value as any).map(unbox) as Unboxed<T>;\r\n  }\r\n\r\n  return Object.keys(value as any).reduce(\r\n    (a, k) => Object.assign(a, { [k]: unbox(value[k as keyof T] as any) }),\r\n    {} as any,\r\n  ) as Unboxed<T>;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export function isEmpty(obj: object) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nexport interface DeepEqualsOptions {\r\n  treatUndefinedAndMissingKeyAsSame?: boolean;\r\n}\r\n\r\nconst defaultOptions: Required<DeepEqualsOptions> = {\r\n  treatUndefinedAndMissingKeyAsSame: false,\r\n};\r\n\r\nexport function deepEquals<T>(_1: T, _2: T, options: DeepEqualsOptions = {}) {\r\n  const { treatUndefinedAndMissingKeyAsSame } = Object.assign({}, defaultOptions, options);\r\n\r\n  const leftChain: any[] = [];\r\n  const rightChain: any[] = [];\r\n\r\n  function compare2Objects(x: any, y: any) {\r\n    let p;\r\n\r\n    // remember that NaN === NaN returns false\r\n    // and isNaN(undefined) returns true\r\n    if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\r\n      return true;\r\n    }\r\n\r\n    // Compare primitives and functions.\r\n    // Check if both arguments link to the same object.\r\n    // Especially useful on the step where we compare prototypes\r\n    if (x === y) {\r\n      return true;\r\n    }\r\n\r\n    // Works in case when functions are created in constructor.\r\n    // Comparing dates is a common scenario. Another built-ins?\r\n    // We can even handle functions passed across iframes\r\n    if ((typeof x === 'function' && typeof y === 'function') ||\r\n      (x instanceof Date && y instanceof Date) ||\r\n      (x instanceof RegExp && y instanceof RegExp) ||\r\n      (x instanceof String && y instanceof String) ||\r\n      (x instanceof Number && y instanceof Number)) {\r\n      return x.toString() === y.toString();\r\n    }\r\n\r\n    // At last checking prototypes as good as we can\r\n    if (!(x instanceof Object && y instanceof Object)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.constructor !== y.constructor) {\r\n      return false;\r\n    }\r\n\r\n    // Check for infinitive linking loops\r\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\r\n      return false;\r\n    }\r\n\r\n    // Quick checking of one object being a subset of another.\r\n    for (p in y) {\r\n      if (treatUndefinedAndMissingKeyAsSame && y.hasOwnProperty(p) && !x.hasOwnProperty(p) && y[p] === undefined) {\r\n        continue;\r\n      }\r\n\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        return false;\r\n      } else if (typeof y[p] !== typeof x[p]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // tslint:disable:forin\r\n    for (p in x) {\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        if (!treatUndefinedAndMissingKeyAsSame || !x.hasOwnProperty(p) || y.hasOwnProperty(p) || x[p] !== undefined) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      switch (typeof (x[p])) {\r\n        case 'object':\r\n        case 'function':\r\n\r\n          leftChain.push(x);\r\n          rightChain.push(y);\r\n\r\n          if (!compare2Objects(x[p], y[p])) {\r\n            return false;\r\n          }\r\n\r\n          leftChain.pop();\r\n          rightChain.pop();\r\n          break;\r\n\r\n        default:\r\n          if (x[p] !== y[p]) {\r\n            return false;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  if (arguments.length <= 1) {\r\n    throw new Error('Need two or more arguments to compare');\r\n  }\r\n\r\n  return compare2Objects(_1, _2);\r\n}\r\n","import { Boxed, isBoxed } from './boxing';\r\nimport { deepEquals, isEmpty } from './util';\r\n\r\nexport type FormControlValueTypes = Boxed<any> | string | number | boolean | null | undefined;\r\nexport type NgrxFormControlId = string;\r\n\r\n/**\r\n * This type represents a collection of named errors.\r\n */\r\nexport interface ValidationErrors { readonly [key: string]: any; }\r\nexport interface KeyValue { [key: string]: any; }\r\n\r\n/**\r\n * Base interface for all types of form states.\r\n */\r\nexport interface AbstractControlState<TValue> {\r\n  /**\r\n   * The unique ID of the form state. Usually this is the name or index\r\n   * of the control in the form value prefixed by the ID of the containing\r\n   * group or array, e.g. `MY_FORM.someTextInput` or `MY_FORM.0`.\r\n   */\r\n  readonly id: string;\r\n\r\n  /**\r\n   * The value of the form state.\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the state does not have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the state has at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the state. This property always has a value.\r\n   * If the state has no errors the property is set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running\r\n   * for the state.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the control is currently being\r\n   * asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the state is enabled. When it\r\n   * is `false` the `errors` are always `{}` (i.e. the state is\r\n   * always valid if disabled) and `pendingValidations` is always `[]`\r\n   * (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the state is disabled. When it\r\n   * is `true` the `errors` are always `{}` (i.e. the state is\r\n   * always valid if disabled) and `pendingValidations` is always `[]`\r\n   * (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state's value changes.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state's value never changed.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state is touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not touched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state is submitted.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property is a container for user-defined metadata (e.g. if\r\n   * you wanted to count the number of times a state's value has been\r\n   * changed, what keys were pressed on an input, or how often a form\r\n   * has been submitted etc.). While it is possible to store this kind\r\n   * of information outside of **ngrx-forms** in your own state the\r\n   * `userDefinedProperties` allow you to store your own metadata\r\n   * directly in the state.\r\n   */\r\n  readonly userDefinedProperties: KeyValue;\r\n}\r\n\r\n/**\r\n * State associated with a form control, i.e. an HTML form\r\n * element in the view (e.g. `input`, `select`, `textarea` etc.).\r\n */\r\nexport interface FormControlState<TValue extends FormControlValueTypes> extends AbstractControlState<TValue> {\r\n  /**\r\n   * The value of the form state. Form controls only support values of\r\n   * type `string`, `number`, `boolean`, `null`, and `undefined` to\r\n   * keep the state string serializable.\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the form control does not have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form control has at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form control. This property always has a value.\r\n   * If the control has no errors the property is set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form control.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the control is currently being\r\n   * asynchronously validated (i.e. this is `true` if and only if\r\n   * `pendingValidations` is not empty).\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form control is enabled.\r\n   * When it is `false` the `errors` are always `{}` (i.e. the form\r\n   * control is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form control is disabled.\r\n   * When it is `true` the `errors` are always `{}` (i.e. the form\r\n   * control is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the underlying\r\n   * `FormViewAdapter` or `ControlValueAccessor` reports a new\r\n   * value for the first time.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the underlying\r\n   * `FormViewAdapter` or `ControlValueAccessor` has never\r\n   * reported a new value.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` based on the rules of the\r\n   * underlying `FormViewAdapter` (usually on `blur` for most form\r\n   * elements).\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the control is not touched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the group or array\r\n   * containing this form control is submitted. A form control can\r\n   * never be submitted on its own.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` if the form control currently\r\n   * has focus. This feature is opt-in. To enable it you have to\r\n   * enable it for a given form element like this:\r\n   *\r\n```html\r\n<input [ngrxFormControlState]=\"state\"\r\n      [ngrxEnableFocusTracking]=\"true\" />\r\n```\r\n   */\r\n  readonly isFocused: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the control currently does not have\r\n   * focus or focus tracking is not enabled for the form control.\r\n   */\r\n  readonly isUnfocused: boolean;\r\n}\r\n\r\n/**\r\n * This type represents the child control states of a form group.\r\n */\r\nexport type FormGroupControls<TValue extends KeyValue> = {\r\n  readonly [controlId in keyof TValue]: FormState<TValue[controlId]>;\r\n};\r\n\r\n/**\r\n * Form groups are collections of named controls. Just like controls\r\n * groups are represented as plain state objects. The state of a\r\n * group is determined almost fully by its child states.\r\n */\r\nexport interface FormGroupState<TValue extends KeyValue> extends AbstractControlState<TValue> {\r\n  /**\r\n   * The aggregated value of the form group. The value is computed by\r\n   * aggregating the values of all children, e.g.\r\n   *\r\n```typescript\r\n{\r\n  child1: 'some value',\r\n  child2: {\r\n    nestedChild: 10,\r\n  },\r\n}\r\n```\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the form group does not have any errors\r\n   * itself and none of its children have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form group or any of its children\r\n   * have at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form group. This property is computed by merging\r\n   * the errors of the group with the errors of all its children where\r\n   * the child errors are a property of the `errors` object prefixed with\r\n   * an underscore, e.g.\r\n   *\r\n```\r\n{\r\n  groupError: true,\r\n  _child: {\r\n    childError: true,\r\n  },\r\n}\r\n```\r\n   *\r\n   * If neither the group nor any children have errors the property is\r\n   * set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form group.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the group or any of its children\r\n   * are currently being asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form group is enabled. It is\r\n   * `true` if and only if at least one of its child states is\r\n   * enabled. When it is `false` the `errors` are always `{}` (i.e.\r\n   * the form group is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form group is disabled. It is\r\n   * `true` if and only if all of its child state are disabled. When\r\n   * it is `true` the `errors` are always `{}` (i.e. the form group\r\n   * is always valid if disabled) and `pendingValidations` is always\r\n   * `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * group's child states is marked as dirty.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form group's\r\n   * child states are pristine.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * group's child states is marked as touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form group's\r\n   * child states are untouched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the form group is\r\n   * submitted. This is tracked by the `NgrxFormDirective`, which\r\n   * needs to be applied to a form like this:\r\n   *\r\n```html\r\n<form [ngrxFormState]=\"groupState\">\r\n</form>\r\n```\r\n   *\r\n   * Note that applying this directive to a form prevents normal form\r\n   * submission since that does not make much sense for ngrx forms.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property contains all child states of the form group. As\r\n   * you may have noticed the type of each child state is\r\n   * `AbstractControlState` which sometimes forces you to cast the\r\n   * state explicitly. It is not possible to improve this typing\r\n   * until [conditional mapped types](https://github.com/Microsoft/TypeScript/issues/12424)\r\n   * are added to TypeScript.\r\n   */\r\n  readonly controls: FormGroupControls<TValue>;\r\n}\r\n\r\n/**\r\n * Form arrays are collections of controls. They are represented as\r\n * plain state arrays. The state of an array is determined almost\r\n * fully by its child states.\r\n */\r\nexport interface FormArrayState<TValue> extends AbstractControlState<readonly TValue[]> {\r\n  /**\r\n   * The aggregated value of the form array. The value is computed by\r\n   * aggregating the values of all children into an array.\r\n   */\r\n  readonly value: TValue[];\r\n\r\n  /**\r\n   * This property is `true` if the form array does not have any errors\r\n   * itself and none of its children have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form array or any of its children\r\n   * have at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form array. This property is computed by merging\r\n   * the errors of the array with the errors of all its children where\r\n   * the child errors are a property of the `errors` object prefixed with\r\n   * an underscore, e.g.\r\n   *\r\n```\r\n{\r\n  arrayError: true,\r\n  _0: {\r\n    childError: true,\r\n  },\r\n}\r\n```\r\n   *\r\n   * If neither the array nor any children have errors the property is\r\n   * set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form array.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the array or any of its children\r\n   * are currently being asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form array is enabled. It is\r\n   * `true` if and only if at least one of its child states is\r\n   * enabled. When it is `false` the `errors` are always `{}` (i.e.\r\n   * the form array is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form array is disabled. It is\r\n   * `true` if and only if all of its child states are disabled. When\r\n   * it is `true` the `errors` are always `{}` (i.e. the form array\r\n   * is always valid if disabled) and `pendingValidations` is always\r\n   * `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * array's child states is marked as dirty.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form array's\r\n   * child states are pristine.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * array's child states is marked as touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form array's\r\n   * child states are untouched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the form array is\r\n   * submitted. This is tracked by the `NgrxFormDirective`, which\r\n   * needs to be applied to a form like this:\r\n   *\r\n```html\r\n<form [ngrxFormState]=\"arrayState\">\r\n</form>\r\n```\r\n   *\r\n   * Note that applying this directive to a form prevents normal form\r\n   * submission since that does not make much sense for ngrx forms.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property contains all child states of the form array. As\r\n   * you may have noticed the type of each child state is\r\n   * `AbstractControlState` which sometimes forces you to cast the\r\n   * state explicitly. It is not possible to improve this typing\r\n   * until [conditional mapped types](https://github.com/Microsoft/TypeScript/issues/12424)\r\n   * are added to TypeScript.\r\n   */\r\n  readonly controls: readonly FormState<TValue>[];\r\n}\r\n\r\n/**\r\n * This is a helper type that allows working around the distributiveness\r\n * of conditional types.\r\n */\r\nexport interface InferenceWrapper<T> {\r\n  t: T;\r\n}\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the boxed type contained in the inference wrapper.\r\n */\r\nexport type InferredBoxedFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<Boxed<infer U>> ? FormControlState<Boxed<U>>\r\n  : T extends InferenceWrapper<Boxed<infer U> | undefined> ? FormControlState<Boxed<U> | undefined>\r\n  : T extends InferenceWrapper<Boxed<infer U> | null> ? FormControlState<Boxed<U> | null>\r\n  : T extends InferenceWrapper<Boxed<infer U> | undefined | null> ? FormControlState<Boxed<U> | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the string type contained in the inference wrapper.\r\n */\r\nexport type InferredStringFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<string> ? FormControlState<string>\r\n  : T extends InferenceWrapper<string | undefined> ? FormControlState<string | undefined>\r\n  : T extends InferenceWrapper<string | null> ? FormControlState<string | null>\r\n  : T extends InferenceWrapper<string | undefined | null> ? FormControlState<string | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the number type contained in the inference wrapper.\r\n */\r\nexport type InferredNumberFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<number> ? FormControlState<number>\r\n  : T extends InferenceWrapper<number | undefined> ? FormControlState<number | undefined>\r\n  : T extends InferenceWrapper<number | null> ? FormControlState<number | null>\r\n  : T extends InferenceWrapper<number | undefined | null> ? FormControlState<number | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the boolean type contained in the inference wrapper.\r\n */\r\nexport type InferredBooleanFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<boolean> ? FormControlState<boolean>\r\n  : T extends InferenceWrapper<boolean | undefined> ? FormControlState<boolean | undefined>\r\n  : T extends InferenceWrapper<boolean | null> ? FormControlState<boolean | null>\r\n  : T extends InferenceWrapper<boolean | undefined | null> ? FormControlState<boolean | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the type contained in the inference wrapper.\r\n */\r\nexport type InferredFormState<T extends InferenceWrapper<any>> =\r\n  // (ab)use 'symbol' to catch 'any' typing\r\n  T extends InferenceWrapper<symbol> ? AbstractControlState<any>\r\n  : T extends InferenceWrapper<undefined> ? AbstractControlState<any>\r\n  : T extends InferenceWrapper<null> ? AbstractControlState<any>\r\n\r\n  // control\r\n  : T extends InferenceWrapper<Boxed<any> | undefined | null> ? InferredBoxedFormState<T>\r\n  : T extends InferenceWrapper<string | undefined | null> ? InferredStringFormState<T>\r\n  : T extends InferenceWrapper<number | undefined | null> ? InferredNumberFormState<T>\r\n  : T extends InferenceWrapper<boolean | undefined | null> ? InferredBooleanFormState<T>\r\n\r\n  // array\r\n  : T extends InferenceWrapper<readonly (infer U)[] | undefined | null> ? FormArrayState<U>\r\n\r\n  // group\r\n  : T extends InferenceWrapper<infer U | undefined | null> ? U extends KeyValue ? FormGroupState<U> : never\r\n\r\n  // fallback type (this case should never (no pun intended) be hit)\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a type that can infer the concrete type of a form state based\r\n * on the given type parameter.\r\n */\r\nexport type FormState<T> = InferredFormState<InferenceWrapper<T>>;\r\n\r\n/**\r\n * This function determines if a value is a form state.\r\n */\r\nexport function isFormState<TValue = any>(state: any): state is FormState<TValue> {\r\n  return !!state && state.hasOwnProperty('id') && state.hasOwnProperty('value') && state.hasOwnProperty('errors');\r\n}\r\n\r\n/**\r\n * This function determines if a value is an array state.\r\n */\r\nexport function isArrayState<TValue = any>(state: any): state is FormArrayState<TValue> {\r\n  return isFormState(state) && state.hasOwnProperty('controls') && Array.isArray((state as any).controls);\r\n}\r\n\r\n/**\r\n * This function determines if a value is a group state.\r\n */\r\nexport function isGroupState<TValue extends KeyValue = any>(state: any): state is FormGroupState<TValue> {\r\n  return isFormState(state) && state.hasOwnProperty('controls') && !Array.isArray((state as any).controls) && typeof (state as any).controls !== 'function';\r\n}\r\n\r\nexport function createChildState<TValue>(id: string, childValue: TValue): FormState<TValue> {\r\n  if (isBoxed(childValue)) {\r\n    return createFormControlState<any>(id, childValue) as FormState<TValue>;\r\n  }\r\n\r\n  if (childValue !== null && Array.isArray(childValue)) {\r\n    return createFormArrayState(id, childValue as any[]) as FormState<TValue>;\r\n  }\r\n\r\n  if (childValue !== null && typeof childValue === 'object') {\r\n    return createFormGroupState(id, childValue) as FormState<TValue>;\r\n  }\r\n\r\n  return createFormControlState<any>(id, childValue) as FormState<TValue>;\r\n}\r\n\r\nexport function verifyFormControlValueIsValid<TValue>(value: TValue) {\r\n  if (value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value) >= 0) {\r\n    return value;\r\n  }\r\n\r\n  if (!isBoxed(value)) {\r\n    const errorMsg = 'Form control states only support undefined, null, string, number, and boolean values as well as boxed values';\r\n    throw new Error(`${errorMsg}; got ${JSON.stringify(value)} of type ${typeof value}`); // `;\r\n  }\r\n\r\n  if (value.value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value.value) >= 0) {\r\n    return value;\r\n  }\r\n\r\n  const serialized = JSON.stringify(value);\r\n  const deserialized = JSON.parse(serialized);\r\n\r\n  if (deepEquals(value, deserialized, { treatUndefinedAndMissingKeyAsSame: true })) {\r\n    return value;\r\n  }\r\n\r\n  throw new Error(`A form control value must be serializable (i.e. value === JSON.parse(JSON.stringify(value))), got: ${JSON.stringify(value)}`);\r\n}\r\n\r\n/**\r\n * This function creates a form control state with an ID and a value.\r\n */\r\nexport function createFormControlState<TValue extends FormControlValueTypes>(\r\n  id: NgrxFormControlId,\r\n  value: TValue,\r\n): FormControlState<TValue> {\r\n  return {\r\n    id,\r\n    value: verifyFormControlValueIsValid(value),\r\n    errors: {},\r\n    pendingValidations: [],\r\n    isValidationPending: false,\r\n    isValid: true,\r\n    isInvalid: false,\r\n    isEnabled: true,\r\n    isDisabled: false,\r\n    isDirty: false,\r\n    isPristine: true,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n    isFocused: false,\r\n    isUnfocused: true,\r\n    userDefinedProperties: {},\r\n  };\r\n}\r\n\r\nexport function getFormGroupValue<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  originalValue: TValue,\r\n): TValue {\r\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\r\n  const newValue = Object.keys(controls).reduce((res, key: keyof TValue) => {\r\n    const control = controls[key] as AbstractControlState<TValue[keyof TValue]>;\r\n    hasChanged = hasChanged || originalValue[key] !== control.value;\r\n    res[key] = control.value;\r\n    return res;\r\n  }, {} as TValue);\r\n\r\n  return hasChanged ? newValue : originalValue;\r\n}\r\n\r\nexport function getFormGroupErrors<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  originalErrors: ValidationErrors,\r\n): ValidationErrors {\r\n  let hasChanged = false;\r\n  const groupErrors =\r\n    Object.keys(originalErrors)\r\n      .filter(key => !key.startsWith('_'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.keys(controls).reduce((res, key: any) => {\r\n    const control = controls[key] as AbstractControlState<TValue[keyof TValue]>;\r\n    const controlErrors = control.errors;\r\n    if (!isEmpty(controlErrors)) {\r\n      hasChanged = hasChanged || originalErrors[`_${key}`] !== controlErrors;\r\n      Object.assign(res, { [`_${key}`]: control.errors });\r\n    } else {\r\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${key}`);\r\n    }\r\n\r\n    return res;\r\n  }, groupErrors);\r\n\r\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\r\n\r\n  return hasChanged ? newErrors : originalErrors;\r\n}\r\n\r\nexport function computeGroupState<TValue extends KeyValue>(\r\n  id: string,\r\n  controls: FormGroupControls<TValue>,\r\n  value: TValue,\r\n  errors: ValidationErrors,\r\n  pendingValidations: readonly string[],\r\n  userDefinedProperties: KeyValue,\r\n  flags: {\r\n    wasOrShouldBeDirty?: boolean;\r\n    wasOrShouldBeEnabled?: boolean;\r\n    wasOrShouldBeTouched?: boolean;\r\n    wasOrShouldBeSubmitted?: boolean;\r\n  },\r\n): FormGroupState<TValue> {\r\n  value = getFormGroupValue<TValue>(controls, value);\r\n  errors = getFormGroupErrors(controls, errors);\r\n  const isValid = isEmpty(errors);\r\n  const isDirty = flags.wasOrShouldBeDirty || Object.keys(controls).some(key => (controls[key] as AbstractControlState<TValue[keyof TValue]>).isDirty);\r\n  const isEnabled = flags.wasOrShouldBeEnabled || Object.keys(controls).some(key => (controls[key] as AbstractControlState<TValue[keyof TValue]>).isEnabled);\r\n  const isTouched = flags.wasOrShouldBeTouched || Object.keys(controls).some(key => (controls[key] as AbstractControlState<TValue[keyof TValue]>).isTouched);\r\n  const isSubmitted = flags.wasOrShouldBeSubmitted || Object.keys(controls).some(key => (controls[key] as AbstractControlState<TValue[keyof TValue]>).isSubmitted);\r\n  const isValidationPending = pendingValidations.length > 0 || Object.keys(controls).some(key => (controls[key] as AbstractControlState<TValue[keyof TValue]>).isValidationPending);\r\n  return {\r\n    id,\r\n    value,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    isEnabled,\r\n    isDisabled: !isEnabled,\r\n    isDirty,\r\n    isPristine: !isDirty,\r\n    isTouched,\r\n    isUntouched: !isTouched,\r\n    isSubmitted,\r\n    isUnsubmitted: !isSubmitted,\r\n    userDefinedProperties,\r\n    controls,\r\n  };\r\n}\r\n\r\n/**\r\n * This function creates a form group state with an ID and a value.\r\n * From the value the shape of the group state is inferred, i.e.\r\n * object properties are inferred as form groups, array properties\r\n * are inferred as form arrays, and primitive properties are inferred\r\n * as form controls.\r\n */\r\nexport function createFormGroupState<TValue extends KeyValue>(\r\n  id: NgrxFormControlId,\r\n  initialValue: TValue,\r\n): FormGroupState<TValue> {\r\n  const controls = Object.keys(initialValue)\r\n    .map((key: keyof TValue) => [key, createChildState(`${id}.${key as string}`, initialValue[key])] as [string, FormState<any>])\r\n    .reduce((res, [controlId, state]) => Object.assign(res, { [controlId]: state }), {} as FormGroupControls<TValue>);\r\n\r\n  return computeGroupState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\r\n}\r\n\r\nfunction getFormArrayValue<TValue>(\r\n  controls: readonly AbstractControlState<TValue>[],\r\n  originalValue: TValue[],\r\n): TValue[] {\r\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\r\n  const newValue = controls.map((state, i) => {\r\n    hasChanged = hasChanged || originalValue[i] !== state.value;\r\n    return state.value;\r\n  });\r\n\r\n  return hasChanged ? newValue : originalValue;\r\n}\r\n\r\nfunction getFormArrayErrors<TValue>(\r\n  controls: readonly AbstractControlState<TValue>[],\r\n  originalErrors: ValidationErrors,\r\n): ValidationErrors {\r\n  let hasChanged = false;\r\n  const groupErrors =\r\n    Object.keys(originalErrors)\r\n      .filter(key => !key.startsWith('_'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = controls.reduce((res, state, i) => {\r\n    const controlErrors = state.errors;\r\n    if (!isEmpty(controlErrors)) {\r\n      hasChanged = hasChanged || originalErrors[`_${i}`] !== controlErrors;\r\n      Object.assign(res, { [`_${i}`]: controlErrors });\r\n    } else {\r\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${i}`);\r\n    }\r\n\r\n    return res;\r\n  }, groupErrors);\r\n\r\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\r\n\r\n  return hasChanged ? newErrors : originalErrors;\r\n}\r\n\r\nexport function computeArrayState<TValue>(\r\n  id: string,\r\n  inferredControls: readonly FormState<TValue>[],\r\n  value: TValue[],\r\n  errors: ValidationErrors,\r\n  pendingValidations: readonly string[],\r\n  userDefinedProperties: KeyValue,\r\n  flags: {\r\n    wasOrShouldBeDirty?: boolean;\r\n    wasOrShouldBeEnabled?: boolean;\r\n    wasOrShouldBeTouched?: boolean;\r\n    wasOrShouldBeSubmitted?: boolean;\r\n  },\r\n): FormArrayState<TValue> {\r\n  const controls = inferredControls as readonly AbstractControlState<any>[];\r\n\r\n  value = getFormArrayValue<TValue>(controls, value);\r\n  errors = getFormArrayErrors(controls, errors);\r\n  const isValid = isEmpty(errors);\r\n  const isDirty = flags.wasOrShouldBeDirty || controls.some(state => state.isDirty);\r\n  const isEnabled = flags.wasOrShouldBeEnabled || controls.some(state => state.isEnabled);\r\n  const isTouched = flags.wasOrShouldBeTouched || controls.some(state => state.isTouched);\r\n  const isSubmitted = flags.wasOrShouldBeSubmitted || controls.some(state => state.isSubmitted);\r\n  const isValidationPending = pendingValidations.length > 0 || controls.some(state => state.isValidationPending);\r\n  return {\r\n    id,\r\n    value,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    isEnabled,\r\n    isDisabled: !isEnabled,\r\n    isDirty,\r\n    isPristine: !isDirty,\r\n    isTouched,\r\n    isUntouched: !isTouched,\r\n    isSubmitted,\r\n    isUnsubmitted: !isSubmitted,\r\n    userDefinedProperties,\r\n    controls: inferredControls,\r\n  };\r\n}\r\n\r\n/**\r\n * This function creates a form array state with an ID and a value.\r\n * From the value the shape of the array state is inferred, i.e.\r\n * object values are inferred as form groups, array values\r\n * are inferred as form arrays, and primitive values are inferred\r\n * as form controls.\r\n */\r\nexport function createFormArrayState<TValue>(\r\n  id: NgrxFormControlId,\r\n  initialValue: TValue[],\r\n): FormArrayState<TValue> {\r\n  const controls = initialValue\r\n    .map((value, i) => createChildState(`${id}.${i}`, value));\r\n\r\n  return computeArrayState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\nimport { isEmpty } from '../../util';\r\n\r\nexport function clearAsyncErrorReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n  const isValid = isEmpty(errors);\r\n\r\n  if (errors === state.errors && isValid === state.isValid && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending: pendingValidations.length > 0,\r\n  };\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function disableReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isEnabled: false,\r\n    isDisabled: true,\r\n    isValid: true,\r\n    isInvalid: false,\r\n    errors: {},\r\n    pendingValidations: [],\r\n    isValidationPending: false,\r\n  };\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function enableReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isEnabled) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isEnabled: true,\r\n    isDisabled: false,\r\n  };\r\n}\r\n","import { Actions, FocusAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function focusReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== FocusAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isFocused) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isFocused: true,\r\n    isUnfocused: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsDirtyReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDirty) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: true,\r\n    isPristine: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsPristineReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: false,\r\n    isPristine: true,\r\n  };\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsSubmittedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isSubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isSubmitted: true,\r\n    isUnsubmitted: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsTouchedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isTouched) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isTouched: true,\r\n    isUntouched: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsUnsubmittedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n  };\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsUntouchedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n  };\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function resetReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: false,\r\n    isPristine: true,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n  };\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\nimport { deepEquals } from '../../util';\r\n\r\nexport function setAsyncErrorReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return {\r\n    ...state,\r\n    isValid: false,\r\n    isInvalid: true,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending: pendingValidations.length > 0,\r\n  };\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes, ValidationErrors } from '../../state';\r\nimport { deepEquals, isEmpty } from '../../util';\r\n\r\nexport function setErrorsReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  const asyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = isEmpty(asyncErrors) ? action.errors : Object.assign(asyncErrors, action.errors);\r\n  const isValid = isEmpty(newErrors);\r\n\r\n  return {\r\n    ...state,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    errors: newErrors,\r\n  };\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes, verifyFormControlValueIsValid } from '../../state';\r\n\r\nexport function setValueReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    value: verifyFormControlValueIsValid(action.value),\r\n  };\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function startAsyncValidationReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    pendingValidations: [...state.pendingValidations, action.name],\r\n    isValidationPending: true,\r\n  };\r\n}\r\n","import { Actions, UnfocusAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function unfocusReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== UnfocusAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUnfocused) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isFocused: false,\r\n    isUnfocused: true,\r\n  };\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { Actions } from '../actions';\r\nimport { FormControlState, FormControlValueTypes, isArrayState, isGroupState } from '../state';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { focusReducer } from './reducer/focus';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { unfocusReducer } from './reducer/unfocus';\r\n\r\nexport function formControlReducerInternal<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (isGroupState(state) || isArrayState(state)) {\r\n    throw new Error('The state must be a control state');\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return state;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = focusReducer(state, action);\r\n  state = unfocusReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form control state with actions.\r\n */\r\nexport function formControlReducer<TValue extends FormControlValueTypes>(state: FormControlState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The control state must be defined!');\r\n  }\r\n\r\n  return formControlReducerInternal(state, action as any);\r\n}\r\n","import { Actions } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeArrayState, FormArrayState, FormGroupControls, FormGroupState, FormState, isArrayState, isGroupState } from '../../state';\r\n\r\nexport function dispatchActionPerChild<TValue>(\r\n  controls: readonly FormState<TValue>[],\r\n  actionCreator: (controlId: string) => Actions<TValue>,\r\n): readonly FormState<TValue>[] {\r\n  let hasChanged = false;\r\n  const newControls = controls\r\n    .map(state => {\r\n      const newState = formStateReducer<TValue>(state, actionCreator(state.id));\r\n      hasChanged = hasChanged || state !== newState;\r\n      return newState;\r\n    });\r\n\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nfunction callChildReducers<TValue>(\r\n  controls: readonly FormState<TValue>[],\r\n  action: Actions<TValue[]>,\r\n): readonly FormState<TValue>[] {\r\n  let hasChanged = false;\r\n  const newControls = controls\r\n    .map(state => {\r\n      const newState = formStateReducer<TValue>(state, action);\r\n      hasChanged = hasChanged || state !== newState;\r\n      return newState;\r\n    });\r\n\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nexport function childReducer<TValue>(state: FormArrayState<TValue>, action: Actions<TValue[]>) {\r\n  const controls = callChildReducers(state.controls, action);\r\n\r\n  if (state.controls === controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n\r\nexport function updateIdRecursiveForGroup<TValue>(state: FormGroupState<TValue>, newId: string): FormGroupState<TValue> {\r\n  const controls: FormGroupControls<TValue> =\r\n    Object.keys(state.controls)\r\n      .reduce((agg, key) => Object.assign(agg, {\r\n        [key]: updateIdRecursive<TValue[keyof TValue]>(state.controls[key as keyof TValue], `${newId}.${key}`),\r\n      }), {} as FormGroupControls<TValue>);\r\n\r\n  return {\r\n    ...state,\r\n    id: newId,\r\n    controls,\r\n  };\r\n}\r\n\r\nexport function updateIdRecursiveForArray<TValue>(state: FormArrayState<TValue>, newId: string): FormArrayState<TValue> {\r\n  const controls = state.controls.map((c, i) => updateIdRecursive(c, `${newId}.${i}`));\r\n\r\n  return {\r\n    ...state,\r\n    id: newId,\r\n    controls,\r\n  };\r\n}\r\n\r\nexport function updateIdRecursive<TValue>(state: FormState<TValue>, newId: string): FormState<TValue> {\r\n  if (state.id === newId) {\r\n    return state;\r\n  }\r\n\r\n  if (isGroupState<TValue>(state)) {\r\n    return updateIdRecursiveForGroup<TValue>(state, newId) as FormState<TValue>;\r\n  }\r\n\r\n  if (isArrayState<TValue>(state)) {\r\n    return updateIdRecursiveForArray<TValue>(state, newId) as any;\r\n  }\r\n\r\n  return {\r\n    ...(state as any),\r\n    id: newId,\r\n  };\r\n}\r\n","import { Actions, AddArrayControlAction } from '../../actions';\r\nimport { computeArrayState, createChildState, FormArrayState, FormState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function addControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== AddArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const index = action.index === undefined ? state.controls.length : action.index;\r\n\r\n  if (index > state.controls.length || index < 0) {\r\n    throw new Error(`Index ${index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\r\n  }\r\n\r\n  let controls = [...state.controls];\r\n  controls.splice(index, 0, createChildState(`${state.id}.${index}`, action.value) as FormState<TValue>);\r\n  controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function clearAsyncErrorReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (state.errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function disableReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)),\r\n    state.value,\r\n    {},\r\n    [],\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: false,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function enableReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\r\n\r\n  if (controls === state.controls && state.isEnabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: true,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsDirtyReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\r\n\r\n  if (controls === state.controls && state.isDirty) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsPristineReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsSubmittedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: true,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsTouchedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: true,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUnsubmittedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUntouchedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MoveArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function move(array: readonly any[], fromIndex: number, toIndex: number) {\r\n  const item = array[fromIndex];\r\n  const length = array.length;\r\n  if (fromIndex > toIndex) {\r\n    return [\r\n      ...array.slice(0, toIndex),\r\n      item,\r\n      ...array.slice(toIndex, fromIndex),\r\n      ...array.slice(fromIndex + 1, length),\r\n    ];\r\n  } else {\r\n    const targetIndex = toIndex + 1;\r\n    return [\r\n      ...array.slice(0, fromIndex),\r\n      ...array.slice(fromIndex + 1, targetIndex),\r\n      item,\r\n      ...array.slice(targetIndex, length),\r\n    ];\r\n  }\r\n}\r\n\r\nexport function moveControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MoveArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const fromIndex = action.fromIndex;\r\n  const toIndex = action.toIndex;\r\n\r\n  if (fromIndex === toIndex) {\r\n    return state;\r\n  }\r\n\r\n  if (fromIndex < 0 || toIndex < 0) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\r\n  }\r\n\r\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\r\n  }\r\n\r\n  let controls = move(state.controls, fromIndex, toIndex);\r\n\r\n  controls = controls.map((c, i) => updateIdRecursive<any>(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    }\r\n  );\r\n}\r\n","import { Actions, RemoveArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function removeControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== RemoveArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (action.index >= state.controls.length || action.index < 0) {\r\n    throw new Error(`Index ${action.index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\r\n  }\r\n\r\n  const index = action.index;\r\n  const controls = state.controls.filter((_, i) => i !== index).map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function resetReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setAsyncErrorReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState, ValidationErrors } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setErrorsReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`);\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\r\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`);\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`);\r\n  }\r\n\r\n  const childAndAsyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('_') || key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    newErrors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeArrayState, createChildState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setValueReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  if (action.value instanceof Date) {\r\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\r\n  }\r\n\r\n  const value = action.value;\r\n\r\n  const controls = value\r\n    .map((v, i) => {\r\n      if (!state.controls[i]) {\r\n        return createChildState(`${state.id}.${i}`, v);\r\n      }\r\n\r\n      return formStateReducer<TValue>(state.controls[i], new SetValueAction(state.controls[i].id, v));\r\n    });\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function startAsyncValidationReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  const pendingValidations = [...state.pendingValidations, action.name];\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    state.errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SwapArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nfunction swapArrayValues(a: readonly any[], i: number, j: number) {\r\n  const n = [...a];\r\n  [n[i], n[j]] = [n[j], n[i]];\r\n  return n;\r\n}\r\n\r\nexport function swapControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SwapArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const fromIndex = action.fromIndex;\r\n  const toIndex = action.toIndex;\r\n\r\n  if (fromIndex === toIndex) {\r\n    return state;\r\n  }\r\n\r\n  if (fromIndex < 0 || toIndex < 0) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\r\n  }\r\n\r\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\r\n  }\r\n\r\n  let controls = swapArrayValues(state.controls, fromIndex, toIndex);\r\n  controls = controls.map((c, i) => (i >= fromIndex || i >= toIndex) ? updateIdRecursive<any>(c, `${state.id}.${i}`) : c);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    }\r\n  );\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport {\r\n  Actions,\r\n  AddGroupControlAction,\r\n  FocusAction,\r\n  isNgrxFormsAction,\r\n  RemoveGroupControlAction,\r\n  UnfocusAction,\r\n} from '../actions';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { addControlReducer } from './reducer/add-control';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { moveControlReducer } from './reducer/move-control';\r\nimport { removeControlReducer } from './reducer/remove-control';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { swapControlReducer } from './reducer/swap-control';\r\nimport { childReducer } from './reducer/util';\r\n\r\nexport function formArrayReducerInternal<TValue>(state: FormArrayState<TValue>, action: Actions<TValue[]>) {\r\n  if (!isArrayState(state)) {\r\n    throw new Error('The state must be an array state');\r\n  }\r\n\r\n  if (!isNgrxFormsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.controlId.startsWith(state.id)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case FocusAction.TYPE:\r\n    case UnfocusAction.TYPE:\r\n    case AddGroupControlAction.TYPE:\r\n    case RemoveGroupControlAction.TYPE:\r\n      return childReducer(state, action);\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n  state = addControlReducer(state, action);\r\n  state = removeControlReducer(state, action);\r\n  state = swapControlReducer(state, action);\r\n  state = moveControlReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form array state with actions.\r\n */\r\nexport function formArrayReducer<TValue>(state: FormArrayState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The array state must be defined!');\r\n  }\r\n\r\n  return formArrayReducerInternal(state, action as any);\r\n}\r\n","import { Action, ActionReducer } from '@ngrx/store';\r\n\r\nimport { Actions, ALL_NGRX_FORMS_ACTION_TYPES } from './actions';\r\nimport { formArrayReducer } from './array/reducer';\r\nimport { formControlReducer } from './control/reducer';\r\nimport { formGroupReducer } from './group/reducer';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormState, isArrayState, isFormState, isGroupState, KeyValue } from './state';\r\nimport { ProjectFn } from './update-function/util';\r\n\r\nexport function formStateReducer<TValue>(\r\n  state: FormState<TValue> | AbstractControlState<TValue> | undefined,\r\n  action: Action,\r\n): FormState<TValue> {\r\n  if (!state) {\r\n    throw new Error('The form state must be defined!');\r\n  }\r\n\r\n  if (!isFormState(state)) {\r\n    throw new Error(`state must be a form state, got ${state}`);\r\n  }\r\n\r\n  if (isGroupState(state)) {\r\n    return formGroupReducer(state, action) as any;\r\n  }\r\n\r\n  if (isArrayState(state)) {\r\n    return formArrayReducer(state as FormArrayState<any>, action) as any;\r\n  }\r\n\r\n  return formControlReducer(state as FormControlState<any>, action) as any;\r\n}\r\n\r\n/**\r\n * This function creates a reducer function that first applies an action to the state\r\n * and afterwards applies all given update functions one after another to the resulting\r\n * form state. However, the update functions are only applied if the form state changed\r\n * as result of applying the action. If you need the update functions to be applied\r\n * regardless of whether the state changed (e.g. because the update function closes\r\n * over variables that may change independently of the form state) you can simply apply\r\n * the update manually (e.g. `updateFunction(formStateReducer(state, action))`).\r\n *\r\n * The following (contrived) example uses this function to create a reducer that after\r\n * each action validates the child control `name` to be required and sets the child\r\n * control `email`'s value to be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updateFormState = updateGroup<FormValue>(\r\n  {\r\n    name: validate(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\n\r\nconst reducer = createFormStateReducerWithUpdate<FormValue>(updateFormState);\r\n```\r\n */\r\nexport function createFormStateReducerWithUpdate<TValue>(\r\n  updateFnOrUpdateFnArr: ProjectFn<FormState<TValue>> | ProjectFn<FormState<TValue>>[],\r\n  ...updateFnArr: ProjectFn<FormState<TValue>>[]\r\n): ActionReducer<FormState<TValue>> {\r\n  updateFnArr = [...(Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr]), ...updateFnArr];\r\n  return (state: FormState<TValue> | undefined, action: Action): FormState<TValue> => {\r\n    const newState = formStateReducer(state as AbstractControlState<TValue>, action);\r\n    return newState === state ? state : updateFnArr.reduce((s, f) => f(s), newState);\r\n  };\r\n}\r\n\r\nfunction reduceNestedFormState<TState>(state: TState, key: keyof TState, action: Action): TState {\r\n  const value = state[key];\r\n\r\n  if (!isFormState(value)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    [key]: formStateReducer(value, action),\r\n  };\r\n}\r\n\r\nfunction reduceNestedFormStates<TState extends KeyValue>(state: TState, action: Action): TState {\r\n  return Object.keys(state).reduce((s, key) => reduceNestedFormState(s, key as keyof TState, action), state);\r\n}\r\n\r\n/**\r\n * This function returns an object that can be passed to ngrx's `createReducer`\r\n * function (available starting with ngrx version 8). By doing this all form\r\n * state properties on the state will be updated whenever necessary (i.e.\r\n * whenever an ngrx-forms action is dispatched).\r\n *\r\n * To manually update a form state (e.g. to validate it) use\r\n * `wrapReducerWithFormStateUpdate`.\r\n */\r\nexport function onNgrxForms<TState = any>(): { reducer: ActionReducer<TState>; types: string[] } {\r\n  return {\r\n    reducer: (state, action) => isFormState(state) ? formStateReducer(state!, action) as unknown as TState : reduceNestedFormStates(state!, action),\r\n    types: ALL_NGRX_FORMS_ACTION_TYPES,\r\n  };\r\n}\r\n\r\nexport interface ActionConstructor {\r\n  new(...args: any[]): Actions<any>;\r\n  readonly TYPE: string;\r\n}\r\n\r\nexport type CreatedAction<TActionCons> = TActionCons extends new (...args: any[]) => infer TAction ? TAction : never;\r\n\r\n/**\r\n * Define a reducer for a ngrx-forms action. This functions works the same as\r\n * ngrx's `on` except that you provide the ngrx-forms action class instead of\r\n * your action creator as a parameter.\r\n */\r\nexport function onNgrxFormsAction<\r\n  TActionCons extends ActionConstructor,\r\n  TState\r\n>(\r\n  actionCons: TActionCons,\r\n  reducer: (state: TState, action: CreatedAction<TActionCons>) => TState,\r\n): { reducer: ActionReducer<TState>; types: string[] } {\r\n  return {\r\n    reducer: (state, action) => reducer(reduceNestedFormStates(state!, action), action as any),\r\n    types: [actionCons.TYPE],\r\n  };\r\n}\r\n\r\n/**\r\n * This function wraps a reducer and returns another reducer that first calls\r\n * the given reducer and then calls the given update function for the form state\r\n * that is specified by the form state locator function.\r\n *\r\n * The update function is passed the form state and the updated containing state\r\n * as parameters.\r\n */\r\nexport function wrapReducerWithFormStateUpdate<TState extends KeyValue, TFormState extends AbstractControlState<any>>(\r\n  reducer: ActionReducer<TState>,\r\n  formStateLocator: (state: TState) => TFormState,\r\n  updateFn: (formState: TFormState, state: TState) => TFormState,\r\n): ActionReducer<TState> {\r\n  return (state, action) => {\r\n    const updatedState = reducer(state, action);\r\n\r\n    const formState = formStateLocator(updatedState);\r\n\r\n    // if the state itself is the form state, update it directly\r\n    if (formState === updatedState as unknown) {\r\n      return updateFn(formState, updatedState) as unknown as TState;\r\n    }\r\n\r\n    const formStateKey = Object.keys(updatedState).find(key => updatedState[key as keyof TState] as any === formState)!;\r\n\r\n    const updatedFormState = updateFn(formState, updatedState);\r\n\r\n    if (updatedFormState === formState) {\r\n      return updatedState;\r\n    }\r\n\r\n    return {\r\n      ...updatedState,\r\n      [formStateKey]: updatedFormState,\r\n    };\r\n  };\r\n}\r\n","import { Actions } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { AbstractControlState, computeGroupState, FormGroupControls, FormGroupState, FormState, KeyValue } from '../../state';\r\n\r\nexport function dispatchActionPerChild<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  actionCreator: (controlId: string) => Actions<TValue>,\r\n) {\r\n  let hasChanged = false;\r\n  const newControls = Object.keys(controls)\r\n    .reduce((c, key) => {\r\n      Object.assign(c, { [key]: formStateReducer(controls[key], actionCreator((controls[key] as AbstractControlState<unknown>).id)) });\r\n      hasChanged = hasChanged || c[key] !== controls[key];\r\n      return c;\r\n    }, {} as FormGroupControls<TValue>);\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nfunction callChildReducers<TValue extends { [key: string]: any }>(\r\n  controls: FormGroupControls<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupControls<TValue> {\r\n  let hasChanged = false;\r\n  const newControls = Object.keys(controls)\r\n    .map(key => [key, formStateReducer(controls[key], action)] as [string, FormState<any>])\r\n    .reduce((res, [key, state]) => {\r\n      hasChanged = hasChanged || state !== controls[key];\r\n      return Object.assign(res, { [key]: state });\r\n    }, {} as FormGroupControls<TValue>);\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nexport function childReducer<TValue extends KeyValue>(state: FormGroupState<TValue>, action: Actions<TValue>) {\r\n  const controls = callChildReducers(state.controls, action);\r\n\r\n  if (state.controls === controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, AddGroupControlAction } from '../../actions';\r\nimport { computeGroupState, createChildState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function addControlReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== AddGroupControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.controls.hasOwnProperty(action.name)) {\r\n    throw new Error(`Group '${state.id}' already has child control '${action.name as string}'!`); // `;\r\n  }\r\n\r\n  const controls = Object.assign({}, state.controls, {\r\n    [action.name]: createChildState(`${state.id}.${action.name as string}`, action.value),\r\n  });\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function clearAsyncErrorReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function disableReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)),\r\n    state.value,\r\n    {},\r\n    [],\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: false,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function enableReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: true,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsDirtyReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsPristineReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsSubmittedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: true,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsTouchedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: true,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUnsubmittedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUntouchedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, RemoveGroupControlAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function removeControlReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== RemoveGroupControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (!state.controls.hasOwnProperty(action.name)) {\r\n    throw new Error(`Group '${state.id}' does not have child control '${action.name as string}'!`); // `;\r\n  }\r\n\r\n  const controls = Object.assign({}, state.controls);\r\n  delete controls[action.name];\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function resetReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setAsyncErrorReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue, ValidationErrors } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setErrorsReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\r\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  const childAndAsyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('_') || key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    newErrors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { AbstractControlState, computeGroupState, createChildState, FormGroupControls, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setValueReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  if (action.value instanceof Date) {\r\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\r\n  }\r\n\r\n  const value = action.value;\r\n\r\n  const controls = Object.keys(value)\r\n    .reduce((c, key) => {\r\n      // tslint:disable-next-line:prefer-conditional-expression\r\n      if (!state.controls[key]) {\r\n        Object.assign(c, { [key]: createChildState<TValue[string]>(`${state.id}.${key}`, value[key]) });\r\n      } else {\r\n        Object.assign(c, { [key]: formStateReducer(state.controls[key], new SetValueAction((state.controls[key] as AbstractControlState<unknown>).id, value[key])) });\r\n      }\r\n      return c;\r\n    }, {} as FormGroupControls<TValue>);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function startAsyncValidationReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  const pendingValidations = [...state.pendingValidations, action.name];\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    state.errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport {\r\n  Actions,\r\n  AddArrayControlAction,\r\n  FocusAction,\r\n  isNgrxFormsAction,\r\n  MoveArrayControlAction,\r\n  RemoveArrayControlAction,\r\n  SwapArrayControlAction,\r\n  UnfocusAction,\r\n} from '../actions';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { addControlReducer } from './reducer/add-control';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { removeControlReducer } from './reducer/remove-control';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { childReducer } from './reducer/util';\r\n\r\nexport function formGroupReducerInternal<TValue extends KeyValue>(state: FormGroupState<TValue>, action: Actions<TValue>) {\r\n  if (!isGroupState(state)) {\r\n    throw new Error('The state must be a group state');\r\n  }\r\n\r\n  if (!isNgrxFormsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.controlId.startsWith(state.id)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case FocusAction.TYPE:\r\n    case UnfocusAction.TYPE:\r\n    case AddArrayControlAction.TYPE:\r\n    case RemoveArrayControlAction.TYPE:\r\n    case MoveArrayControlAction.TYPE:\r\n    case SwapArrayControlAction.TYPE:\r\n      return childReducer(state, action);\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = addControlReducer(state, action);\r\n  state = removeControlReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form group state with actions.\r\n */\r\nexport function formGroupReducer<TValue extends KeyValue>(state: FormGroupState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The group state must be defined!');\r\n  }\r\n\r\n  return formGroupReducerInternal(state, action as any);\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { AbstractControlState, isArrayState, isGroupState } from '../state';\r\n\r\nexport type ProjectFn<T> = (t: T) => T;\r\nexport type ProjectFn2<T, K> = (t: T, k: K) => T;\r\n\r\nexport function abstractControlReducer<TValue>(state: AbstractControlState<TValue>, action: Action): AbstractControlState<TValue> {\r\n  if (isArrayState(state)) {\r\n    return formArrayReducer(state, action as any) as any;\r\n  }\r\n\r\n  if (isGroupState(state)) {\r\n    return formGroupReducer(state, action);\r\n  }\r\n\r\n  return formControlReducer(state as any, action) as any;\r\n}\r\n\r\nexport function compose<T>(...fns: ((t: T) => T)[]) {\r\n  return (t: T) => fns.reduce((res, f) => f(res), t);\r\n}\r\n\r\nexport function ensureState<TState>(state: TState | undefined): TState {\r\n  if (!state) {\r\n    throw new Error('state must not be undefined!');\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { computeArrayState, FormArrayState, FormState, isArrayState } from '../state';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nexport type FilterFn<TValue> = (s: FormState<TValue>, idx: number) => boolean;\r\n\r\nfunction updateArrayControlsState<TValue>(filterFn: FilterFn<TValue>, updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>) {\r\n  return (state: FormArrayState<TValue>) => {\r\n    let hasChanged = false;\r\n    const newControls = state.controls.map((control, idx) => {\r\n      if (!filterFn(control, idx)) {\r\n        return control;\r\n      }\r\n\r\n      const newControl = updateFn(control, state);\r\n      hasChanged = hasChanged || newControl !== control;\r\n      return newControl;\r\n    });\r\n    return hasChanged ? newControls : state.controls;\r\n  };\r\n}\r\n\r\nfunction updateArraySingle<TValue>(filterFn: FilterFn<TValue>, updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>) {\r\n  return (state: FormArrayState<TValue>): FormArrayState<TValue> => {\r\n    const newControls = updateArrayControlsState<TValue>(filterFn, updateFn)(state);\r\n    return newControls !== state.controls\r\n      ? computeArrayState<TValue>(\r\n        state.id,\r\n        newControls,\r\n        state.value,\r\n        state.errors,\r\n        state.pendingValidations,\r\n        state.userDefinedProperties,\r\n        {\r\n          wasOrShouldBeDirty: state.isDirty,\r\n          wasOrShouldBeEnabled: state.isEnabled,\r\n          wasOrShouldBeTouched: state.isTouched,\r\n          wasOrShouldBeSubmitted: state.isSubmitted,\r\n        },\r\n      )\r\n      : state;\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes a filter function and one or more update functions\r\n * and returns a projection function that applies all update functions one after\r\n * another to each element of the form array state for which the filter function\r\n * returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  (_, idx) => idx > 0,\r\n  validate(required),\r\n  markAsDirty,\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  filterFn: FilterFn<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a filter function and an array of update functions\r\n * and returns a projection function that applies all update functions one after\r\n * another to each element of the form array state for which the filter function\r\n * returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  (_, idx) => idx > 0,\r\n  [\r\n    validate(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  filterFn: FilterFn<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state, a filter function, and a variable\r\n * number of update functions and applies all update functions one after another to\r\n * each element of the form array state for which the filter function returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  (_, idx) => idx > 0,\r\n  validate(required),\r\n  markAsDirty,\r\n);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  filterFn: FilterFn<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state, a filter function, and an array of\r\n * update functions and applies all update functions one after another to each\r\n * element of the form array state for which the filter function returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  (_, idx) => idx > 0,\r\n  [\r\n    validate(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  filterFn: FilterFn<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): FormArrayState<TValue>;\r\n\r\nexport function updateArrayWithFilter<TValue>(\r\n  stateOrFilterFunction: FormArrayState<TValue> | FilterFn<TValue>,\r\n  filterFunctionOrFunctionOrFunctionArray:\r\n    | FilterFn<TValue>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<FormState<TValue>, FormArrayState<TValue>> | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  ...rest: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n) {\r\n  if (isArrayState<TValue>(stateOrFilterFunction)) {\r\n    const filterFn = filterFunctionOrFunctionOrFunctionArray as FilterFn<TValue>;\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle<TValue>(filterFn, updateFn)(s), stateOrFilterFunction);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(filterFunctionOrFunctionOrFunctionArray)\r\n    ? filterFunctionOrFunctionOrFunctionArray\r\n    : [filterFunctionOrFunctionOrFunctionArray as ProjectFn2<FormState<TValue>, FormArrayState<TValue>>];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormArrayState<TValue>) => updateArrayWithFilter<TValue>(ensureState(s), stateOrFilterFunction, updateFnArr.concat(rest));\r\n}\r\n\r\n/**\r\n * This update function takes one or more update functions and returns a\r\n * projection function that applies all update functions one after another to\r\n * each element of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  validate<string>(required),\r\n  markAsDirty,\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update functions and returns\r\n * a projection function that applies all update functions one after another to\r\n * each element of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>([\r\n  validate<string>(required),\r\n  markAsDirty,\r\n]);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and one or more update functions\r\n * and applies all update functions one after another to each element of the form\r\n * array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  validate<string>(required),\r\n  markAsDirty,\r\n);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and an array of update\r\n * functions and applies all update functions one after another to each element\r\n * of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  [\r\n    validate<string>(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): FormArrayState<TValue>;\r\n\r\nexport function updateArray<TValue>(\r\n  stateOrFunctionOrFunctionArray:\r\n    | FormArrayState<TValue>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<FormState<TValue>, FormArrayState<TValue>> | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  ...rest: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n) {\r\n  if (isArrayState<TValue>(stateOrFunctionOrFunctionArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle<TValue>(() => true, updateFn)(s), stateOrFunctionOrFunctionArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormArrayState<TValue>) => updateArray<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { computeGroupState, FormGroupControls, FormGroupState, FormState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nexport type StateUpdateFns<TValue extends KeyValue> = {\r\n  [controlId in keyof TValue]?: ProjectFn2<FormState<TValue[controlId]>, FormGroupState<TValue>>;\r\n};\r\n\r\nfunction updateGroupControlsState<TValue extends KeyValue>(updateFns: StateUpdateFns<TValue>) {\r\n  return (state: FormGroupState<TValue>) => {\r\n    let hasChanged = false;\r\n    const newControls = Object.keys(state.controls).reduce((res, key) => {\r\n      const control = state.controls[key];\r\n      Object.assign(res, { [key]: control });\r\n      if (updateFns.hasOwnProperty(key)) {\r\n        const newControl = updateFns[key]!(control, state);\r\n        hasChanged = hasChanged || newControl !== control;\r\n        Object.assign(res, { [key]: newControl });\r\n      }\r\n      return res;\r\n    }, {} as FormGroupControls<TValue>);\r\n    return hasChanged ? newControls : state.controls;\r\n  };\r\n}\r\n\r\nfunction updateGroupSingle<TValue extends KeyValue>(updateFns: StateUpdateFns<TValue>) {\r\n  return (state: FormGroupState<TValue>): FormGroupState<TValue> => {\r\n    const newControls = updateGroupControlsState<TValue>(updateFns)(state);\r\n    return newControls !== state.controls\r\n      ? computeGroupState<TValue>(\r\n        state.id,\r\n        newControls,\r\n        state.value,\r\n        state.errors,\r\n        state.pendingValidations,\r\n        state.userDefinedProperties,\r\n        {\r\n          wasOrShouldBeDirty: state.isDirty,\r\n          wasOrShouldBeEnabled: state.isEnabled,\r\n          wasOrShouldBeTouched: state.isTouched,\r\n          wasOrShouldBeSubmitted: state.isSubmitted,\r\n        },\r\n      )\r\n      : state;\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes one or more update function objects and returns\r\n * a projection function that applies all objects one after another to a form\r\n * group state.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst groupUpdateFn = updateGroup<FormValue>(\r\n  {\r\n    name: validate<string>(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\nconst updatedState = groupUpdateFn(state);\r\n```\r\n */\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  updateFn: StateUpdateFns<TValue>,\r\n  ...updateFnsArr: StateUpdateFns<TValue>[]\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update function objects and\r\n * returns a projection function that applies all objects one after another to\r\n * a form group state.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst groupUpdateFn = updateGroup<FormValue>(\r\n  [\r\n    {\r\n      name: validate<string>(required),\r\n    },\r\n    {\r\n      email: (email, parentGroup) =>\r\n        parentGroup.controls.name.isInvalid\r\n          ? setValue('', email)\r\n          : email,\r\n    },\r\n  ],\r\n);\r\nconst updatedState = groupUpdateFn(state);\r\n```\r\n */\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  updateFnsArr: StateUpdateFns<TValue>[],\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and one or more update\r\n * function objects and applies all objects one after another to the state.\r\n * Providing multiple update function objects is mainly useful if the result\r\n * of a later object depends on the result of previous objects.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updatedState = updateGroup<FormValue>(\r\n  state,\r\n  {\r\n    name: validate<string>(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\n```\r\n */\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  updateFn: StateUpdateFns<TValue>,\r\n  ...updateFnsArr: StateUpdateFns<TValue>[]\r\n): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and an array of update\r\n * function objects and applies all objects one after another to the state.\r\n * Providing multiple update function objects is mainly useful if the result\r\n * of a later object depends on the result of previous objects.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updatedState = updateGroup<FormValue>(\r\n  state,\r\n  [\r\n    {\r\n      name: validate<string>(required),\r\n    },\r\n    {\r\n      email: (email, parentGroup) =>\r\n        parentGroup.controls.name.isInvalid\r\n          ? setValue('', email)\r\n          : email,\r\n    },\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  updateFnsArr: StateUpdateFns<TValue>[],\r\n): FormGroupState<TValue>;\r\n\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  stateOrUpdateFnOrUpdateFnArray: FormGroupState<TValue> | StateUpdateFns<TValue> | StateUpdateFns<TValue>[],\r\n  updateFnOrUpdateFnArr?: StateUpdateFns<TValue> | StateUpdateFns<TValue>[],\r\n  ...rest: StateUpdateFns<TValue>[]\r\n) {\r\n  if (isGroupState<TValue>(stateOrUpdateFnOrUpdateFnArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateGroupSingle<TValue>(updateFn)(s), stateOrUpdateFnOrUpdateFnArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrUpdateFnOrUpdateFnArray) ? stateOrUpdateFnOrUpdateFnArray : [stateOrUpdateFnOrUpdateFnArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormGroupState<TValue>) => updateGroup<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import {\r\n  AbstractControlState,\r\n  FormState,\r\n  isArrayState,\r\n  isFormState,\r\n  isGroupState,\r\n} from '../state';\r\nimport { updateArray } from './update-array';\r\nimport { StateUpdateFns, updateGroup } from './update-group';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nfunction updateRecursiveSingle(parent: AbstractControlState<any>, updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>) {\r\n  return (state: AbstractControlState<any>): AbstractControlState<any> => {\r\n    if (isGroupState(state)) {\r\n      const updateFunctions = Object.keys(state.controls).reduce((agg, key) => Object.assign(agg, {\r\n        [key]: (s: AbstractControlState<any>, p: AbstractControlState<any>) => updateRecursiveSingle(p, updateFn)(s),\r\n      }), {} as StateUpdateFns<any>);\r\n      state = updateGroup<any>(updateFunctions)(state);\r\n      return updateFn(state, parent);\r\n    }\r\n\r\n    if (isArrayState(state)) {\r\n      state = updateArray<any>((s, p) => updateRecursiveSingle(p, updateFn)(s))(state);\r\n      return updateFn(state, parent);\r\n    }\r\n\r\n    return updateFn(state, parent);\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes a form array state and one or more update\r\n * functions applies all update functions one after another to the state\r\n * recursively, i.e. the function is applied to the state's children,\r\n * their children etc.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group or array as required.\r\n *\r\n ```typescript\r\n const updatedState = updateRecursive(\r\n   state,\r\n   validate<any>(required),\r\n );\r\n ```\r\n */\r\nexport function updateRecursive<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>,\r\n  ...updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and an array of\r\n * update functions applies all update functions one after another to the\r\n * state recursively, i.e. the function is applied to the state's children,\r\n * their children etc.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group or array as required.\r\n *\r\n```typescript\r\nconst updatedState = updateRecursive(\r\n  state,\r\n  [validate<any>(required)],\r\n);\r\n```\r\n */\r\nexport function updateRecursive<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes one or more update functions and returns a\r\n * projection function that applies all update functions one after another to\r\n * a form state.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group as required.\r\n *\r\n```typescript\r\nconst updateFn = updateRecursive(validate<any>(required));\r\nconst updatedState = updateFn(state);\r\n```\r\n */\r\nexport function updateRecursive(\r\n  updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>,\r\n  ...updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update functions and returns\r\n * a projection function that applies all update functions one after another to\r\n * a form state.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group as required.\r\n *\r\n```typescript\r\nconst updateFn = updateRecursive([validate<any>(required)]);\r\nconst updatedState = updateFn(state);\r\n```\r\n */\r\nexport function updateRecursive(\r\n  updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function updateRecursive<TValue>(\r\n  stateOrFunctionOrFunctionArray:\r\n    | AbstractControlState<TValue>\r\n    | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>\r\n    | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>> | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n  ...rest: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n) {\r\n  if (isFormState(stateOrFunctionOrFunctionArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest)\r\n      .reduce((s, updateFn) => updateRecursiveSingle(stateOrFunctionOrFunctionArray, updateFn)(s), stateOrFunctionOrFunctionArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: AbstractControlState<TValue>) => updateRecursive<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { SetValueAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a value and returns a projection function that\r\n * sets the value of a form state. Setting the value of a group or array will\r\n * also update the values of all children including adding and removing\r\n * children on the fly for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(value: TValue): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a value and sets the value of\r\n * the state. Setting the value of a group or array will also update the\r\n * values of all children including adding and removing children on the fly\r\n * for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(state: AbstractControlState<TValue>, value: TValue): FormState<TValue>;\r\n\r\nexport function setValue<TValue>(valueOrState: TValue | AbstractControlState<TValue>, value?: TValue) {\r\n  if (isFormState(valueOrState)) {\r\n    return abstractControlReducer(valueOrState, new SetValueAction(valueOrState.id, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setValue(ensureState(s), valueOrState);\r\n}\r\n","import { SetErrorsAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState, ValidationErrors } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a form state and a number of error objects and sets the\r\n * errors of the state.\r\n */\r\nexport function setErrors<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  errors: ValidationErrors,\r\n  ...rest: ValidationErrors[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and an array of error objects and sets the\r\n * errors of the state.\r\n */\r\nexport function setErrors<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  errorsArray: ValidationErrors[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a number of error objects and returns a projection\r\n * function that sets the errors of a form state.\r\n */\r\nexport function setErrors(errors: ValidationErrors, ...rest: ValidationErrors[]): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of error objects and returns a projection\r\n * function that sets the errors of a form state.\r\n */\r\nexport function setErrors(errorsArray: ValidationErrors[]): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function setErrors<TValue>(\r\n  errorsOrErrorsArrayOrState: ValidationErrors | ValidationErrors[] | FormState<TValue>,\r\n  errorsOrErrorsArray?: ValidationErrors | ValidationErrors[],\r\n  ...rest: ValidationErrors[]\r\n) {\r\n  if (isFormState<TValue>(errorsOrErrorsArrayOrState)) {\r\n    const state = errorsOrErrorsArrayOrState as AbstractControlState<TValue>;\r\n    const errorsArray = Array.isArray(errorsOrErrorsArray) ? errorsOrErrorsArray : [errorsOrErrorsArray!];\r\n    const errors = errorsArray.concat(...rest).reduce((agg, err) => Object.assign(agg, err), {} as ValidationErrors);\r\n\r\n    return formStateReducer(state, new SetErrorsAction(state.id, errors));\r\n  }\r\n\r\n  let errorsArray = Array.isArray(errorsOrErrorsArrayOrState) ? errorsOrErrorsArrayOrState : [errorsOrErrorsArrayOrState];\r\n  errorsArray = errorsOrErrorsArray === undefined ? errorsArray : errorsArray.concat(errorsOrErrorsArray);\r\n  return (s: AbstractControlState<TValue>) => setErrors<TValue>(ensureState(s), errorsArray.concat(rest));\r\n}\r\n","import { SetErrorsAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState, ValidationErrors } from '../state';\r\nimport { ensureState } from './util';\r\n\r\nexport type ValidationFn<TValue> = (value: TValue) => ValidationErrors;\r\n\r\n/**\r\n * This update function takes one or more validation functions and a form\r\n * state and sets the errors of the state to the result of applying the\r\n * given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  fn: ValidationFn<TValue>,\r\n  ...rest: ValidationFn<TValue>[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of validation functions and a form\r\n * state and sets the errors of the state to the result of applying the given\r\n * validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  rest: ValidationFn<TValue>[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes one or more validation functions and returns\r\n * a projection function that sets the errors of a form state to the result\r\n * of applying the given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  fn: ValidationFn<TValue>,\r\n  ...rest: ValidationFn<TValue>[]\r\n): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of validation functions and returns a\r\n * projection function that sets the errors of a form state to the result of\r\n * applying the given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  rest: ValidationFn<TValue>[],\r\n): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function validate<TValue>(\r\n  stateOrFunctionOrFunctionArray: FormState<TValue> | ValidationFn<TValue> | ValidationFn<TValue>[],\r\n  functionOrFunctionArr?: ValidationFn<TValue> | ValidationFn<TValue>[],\r\n  ...rest: ValidationFn<TValue>[]\r\n) {\r\n  if (isFormState<TValue>(stateOrFunctionOrFunctionArray)) {\r\n    const state = stateOrFunctionOrFunctionArray as AbstractControlState<TValue>;\r\n    const functionArr = Array.isArray(functionOrFunctionArr) ? functionOrFunctionArr : [functionOrFunctionArr!];\r\n    const errors = functionArr.concat(...rest)\r\n      .reduce((agg, validationFn) => Object.assign(agg, validationFn(state.value)), {} as ValidationErrors);\r\n    return formStateReducer<TValue>(stateOrFunctionOrFunctionArray, new SetErrorsAction(state.id, errors));\r\n  }\r\n\r\n  const functionOrFunctionArray = stateOrFunctionOrFunctionArray as ValidationFn<TValue> | ValidationFn<TValue>[];\r\n  let updateFnArr = Array.isArray(functionOrFunctionArray) ? functionOrFunctionArray : [functionOrFunctionArray];\r\n  updateFnArr = functionOrFunctionArr === undefined ? updateFnArr : updateFnArr.concat(functionOrFunctionArr);\r\n  return (s: AbstractControlState<TValue>) => validate<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { EnableAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and enables it.\r\n */\r\nexport function enable<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and enables it and all of its children.\r\n */\r\nexport function enable<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and enables it and all of its children.\r\n */\r\nexport function enable<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and enables it. For groups and arrays also\r\n * enables all children.\r\n */\r\nexport function enable<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function enable<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new EnableAction(state.id));\r\n}\r\n","import { DisableAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and disables it. Disabling a control\r\n * will clear all of its errors (i.e. making it always valid) and will remove all\r\n * pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and disables it. For groups and arrays also\r\n * disables all children. Disabling a control will clear all of its errors (i.e. making\r\n * it always valid) and will remove all pending validations (thereby effectively\r\n * cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function disable<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new DisableAction(state.id));\r\n}\r\n","import { MarkAsDirtyAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as dirty.\r\n */\r\nexport function markAsDirty<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as dirty.\r\n */\r\nexport function markAsDirty<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as dirty.\r\n */\r\nexport function markAsDirty<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as dirty. For groups and arrays this also marks\r\n * all children as dirty.\r\n */\r\nexport function markAsDirty<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsDirty<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsDirtyAction(state.id));\r\n}\r\n","import { MarkAsPristineAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as pristine.\r\n */\r\nexport function markAsPristine<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as pristine.\r\n */\r\nexport function markAsPristine<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as pristine.\r\n */\r\nexport function markAsPristine<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as pristine. For groups and arrays this also marks\r\n * all children as pristine.\r\n */\r\nexport function markAsPristine<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsPristine<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsPristineAction(state.id));\r\n}\r\n","import { MarkAsTouchedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as touched.\r\n */\r\nexport function markAsTouched<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as touched. For groups and arrays this also marks\r\n * all children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsTouchedAction(state.id));\r\n}\r\n","import { MarkAsUntouchedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as untouched.\r\n */\r\nexport function markAsUntouched<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as untouched.\r\n */\r\nexport function markAsUntouched<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as untouched.\r\n */\r\nexport function markAsUntouched<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as untouched. For groups and arrays this also marks\r\n * all children as untouched.\r\n */\r\nexport function markAsUntouched<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsUntouched<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsUntouchedAction(state.id));\r\n}\r\n","import { MarkAsSubmittedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as submitted.\r\n */\r\nexport function markAsSubmitted<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as submitted. For groups and arrays this also marks\r\n * all children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsSubmitted<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsSubmittedAction(state.id));\r\n}\r\n","import { MarkAsUnsubmittedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as unsubmitted. For groups and arrays this also marks\r\n * all children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsUnsubmitted<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsUnsubmittedAction(state.id));\r\n}\r\n","import { FocusAction } from '../actions';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as focused (which\r\n * will also `.focus()` the form element).\r\n */\r\nexport function focus<TValue extends FormControlValueTypes>(state: FormControlState<TValue>) {\r\n  return formControlReducer(state, new FocusAction(state.id));\r\n}\r\n","import { UnfocusAction } from '../actions';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as not focused (which\r\n * will also `.blur()` the form element).\r\n */\r\nexport function unfocus<TValue extends FormControlValueTypes>(state: FormControlState<TValue>) {\r\n  return formControlReducer(state, new UnfocusAction(state.id));\r\n}\r\n","import { AddArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a value and optionally an index and returns a projection function\r\n * that adds a child control at the given index or at the end of a form array state.\r\n */\r\nexport function addArrayControl<TValue>(value: TValue, index?: number): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array form state, a value, and optionally an index and adds a\r\n * child control at the given index or at the end of the state.\r\n */\r\nexport function addArrayControl<TValue>(state: FormArrayState<TValue>, value: TValue, index?: number): FormArrayState<TValue>;\r\n\r\nexport function addArrayControl<TValue>(valueOrState: TValue | FormArrayState<TValue>, indexOrValue: number | TValue | undefined, index?: number) {\r\n  if (isArrayState(valueOrState)) {\r\n    return formArrayReducer(valueOrState, new AddArrayControlAction(valueOrState.id, indexOrValue as TValue, index));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => addArrayControl(ensureState(s), valueOrState as TValue, indexOrValue as number);\r\n}\r\n","import { AddGroupControlAction } from '../actions';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection function\r\n * that adds a child control with the given name and value to a form group state.\r\n */\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  name: TControlKey,\r\n  value: TValue[TControlKey],\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state, a name, and a value, and adds a child\r\n * control with the given name and value to the form group state.\r\n */\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  state: FormGroupState<TValue>,\r\n  name: TControlKey,\r\n  value: TValue[TControlKey],\r\n): FormGroupState<TValue>;\r\n\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  nameOrState: TControlKey | FormGroupState<TValue>,\r\n  valueOrName: TValue[TControlKey] | TControlKey,\r\n  value?: TValue[TControlKey],\r\n) {\r\n  if (isGroupState(nameOrState)) {\r\n    return formGroupReducer(nameOrState, new AddGroupControlAction<TValue, TControlKey>(nameOrState.id, valueOrName as TControlKey, value!));\r\n  }\r\n\r\n  return (s: FormGroupState<TValue>) => addGroupControl(ensureState(s), nameOrState as TControlKey, valueOrName as TValue[TControlKey]);\r\n}\r\n","import { MoveArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a source index, a destination index, and returns a projection function\r\n * that moves the child control at the source index to the destination index from a form array state.\r\n */\r\nexport function moveArrayControl(fromIndex: number, toIndex: number): <TValue>(state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state, a source index, a destination index and moves the\r\n * child control at the source index to the destination index in the form array state.\r\n */\r\nexport function moveArrayControl<TValue>(state: FormArrayState<TValue>, fromIndex: number, toIndex: number): FormArrayState<TValue>;\r\n\r\nexport function moveArrayControl<TValue>(indexOrState: number | FormArrayState<TValue>, fromIndex: number, toIndex?: number) {\r\n  if (isArrayState(indexOrState)) {\r\n    return formArrayReducer(indexOrState, new MoveArrayControlAction(indexOrState.id, fromIndex, toIndex!));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => moveArrayControl(ensureState(s), indexOrState as number, fromIndex);\r\n}\r\n","import { SwapArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes two indices and returns a projection function that swaps the\r\n * child controls at those indices in a form array state.\r\n */\r\nexport function swapArrayControl(fromIndex: number, toIndex: number): <TValue>(state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and two indices and swaps the\r\n * child controls at those indices in the state.\r\n */\r\nexport function swapArrayControl<TValue>(state: FormArrayState<TValue>, fromIndex: number, toIndex: number): FormArrayState<TValue>;\r\n\r\nexport function swapArrayControl<TValue>(indexOrState: number | FormArrayState<TValue>, fromIndex: number, toIndex?: number) {\r\n  if (isArrayState(indexOrState)) {\r\n    return formArrayReducer(indexOrState, new SwapArrayControlAction(indexOrState.id, fromIndex, toIndex!));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => swapArrayControl(ensureState(s), indexOrState as number, fromIndex);\r\n}\r\n","import { RemoveArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes an index and returns a projection function\r\n * that removes the child control at the given index from a form array state.\r\n */\r\nexport function removeArrayControl(index: number): <TValue>(state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array form state and an index and removes the\r\n * child control at the given index from the state.\r\n */\r\nexport function removeArrayControl<TValue>(state: FormArrayState<TValue>, index: number): FormArrayState<TValue>;\r\n\r\nexport function removeArrayControl<TValue>(indexOrState: number | FormArrayState<TValue>, index?: number) {\r\n  if (isArrayState(indexOrState)) {\r\n    return formArrayReducer(indexOrState, new RemoveArrayControlAction(indexOrState.id, index!));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => removeArrayControl(ensureState(s), indexOrState as number);\r\n}\r\n","import { RemoveGroupControlAction } from '../actions';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function\r\n * that removes the child control with the given name from a form group state.\r\n */\r\nexport function removeGroupControl<TValue extends KeyValue>(name: keyof TValue): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a group form state and a name and removes the\r\n * child control with the given name from the state.\r\n */\r\nexport function removeGroupControl<TValue extends KeyValue>(state: FormGroupState<TValue>, name: keyof TValue): FormGroupState<TValue>;\r\n\r\nexport function removeGroupControl<TValue extends KeyValue>(nameOrState: keyof TValue | FormGroupState<TValue>, name?: keyof TValue) {\r\n  if (isGroupState(nameOrState)) {\r\n    return formGroupReducer(nameOrState, new RemoveGroupControlAction<TValue>(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: FormGroupState<TValue>) => removeGroupControl(ensureState(s), nameOrState as keyof TValue);\r\n}\r\n","import { SetUserDefinedPropertyAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection\r\n * function that sets a user-defined property on a form state.\r\n */\r\nexport function setUserDefinedProperty(name: string, value: any): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state, a name, and a value and sets\r\n * a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(state: AbstractControlState<TValue>, name: string, value: any): FormState<TValue>;\r\n\r\nexport function setUserDefinedProperty<TValue>(nameOrState: string | FormState<TValue>, valueOrName: any | string, value?: any) {\r\n  if (isFormState<TValue>(nameOrState)) {\r\n    const state = nameOrState as AbstractControlState<TValue>;\r\n    return formStateReducer(nameOrState, new SetUserDefinedPropertyAction(state.id, valueOrName, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setUserDefinedProperty(ensureState(s), nameOrState as string, valueOrName);\r\n}\r\n","import { ResetAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState, KeyValue } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as pristine,\r\n * untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its\r\n * children as pristine, untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its\r\n * children as pristine, untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue extends KeyValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as pristine, untouched, and\r\n * unsubmitted. For groups and arrays this also marks all children as pristine,\r\n * untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function reset<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new ResetAction(state.id));\r\n}\r\n","import { StartAsyncValidationAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function that\r\n * marks the async validation for the given name as pending.\r\n */\r\nexport function startAsyncValidation(name: string): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a name and marks the async\r\n * validation for the given name as pending.\r\n */\r\nexport function startAsyncValidation<TValue>(state: AbstractControlState<TValue>, name: string): FormState<TValue>;\r\n\r\nexport function startAsyncValidation<TValue>(nameOrState: string | AbstractControlState<TValue>, name?: string) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new StartAsyncValidationAction(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => startAsyncValidation(ensureState(s), nameOrState);\r\n}\r\n","import { SetAsyncErrorAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection\r\n * function that sets the async error for the given name to the given value.\r\n * It also marks the validation for the name as not pending anymore if it\r\n * was pending.\r\n */\r\nexport function setAsyncError(name: string, value: any): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state, a name, and a value and sets the\r\n * async error for the given name to the given value. It also marks the\r\n * validation for the name as not pending anymore if it was pending.\r\n */\r\nexport function setAsyncError<TValue>(state: AbstractControlState<TValue>, name: string, value: any): FormState<TValue>;\r\n\r\nexport function setAsyncError<TValue>(nameOrState: string | AbstractControlState<TValue>, nameOrValue?: string | any, value?: any) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new SetAsyncErrorAction(nameOrState.id, nameOrValue, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setAsyncError(ensureState(s), nameOrState, nameOrValue);\r\n}\r\n","import { ClearAsyncErrorAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function that\r\n * clears the async error with the given name.\r\n */\r\nexport function clearAsyncError(name: string): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a name, and clears the async\r\n * error with the given name.\r\n */\r\nexport function clearAsyncError<TValue>(state: AbstractControlState<TValue>, name: string): FormState<TValue>;\r\n\r\nexport function clearAsyncError<TValue>(nameOrState: string | AbstractControlState<TValue>, name?: string) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new ClearAsyncErrorAction(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => clearAsyncError(ensureState(s), nameOrState);\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface FormViewAdapter {\r\n  /**\r\n   * Sets a new value for the form element.\r\n   */\r\n  setViewValue(value: any): void;\r\n\r\n  /**\r\n   * Set the function to be called when the form element receives a change event.\r\n   */\r\n  setOnChangeCallback(fn: (value: any) => void): void;\r\n\r\n  /**\r\n   * Set the function to be called when the form element receives a touch event.\r\n   */\r\n  setOnTouchedCallback(fn: () => void): void;\r\n\r\n  /**\r\n   * Enable or disable the form element.\r\n   */\r\n  setIsDisabled?(isDisabled: boolean): void;\r\n}\r\n\r\n/**\r\n * Used to provide a {@link FormViewAdapter} for form elements.\r\n */\r\nexport const NGRX_FORM_VIEW_ADAPTER = new InjectionToken<FormViewAdapter>('NgrxFormViewAdapter');\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=checkbox][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxCheckboxViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    this.onChange(target.checked);\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Inject, Input, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\nexport interface Navigator {\r\n  userAgent: string;\r\n}\r\n\r\n/**\r\n * We must check whether the agent is Android because composition events\r\n * behave differently between iOS and Android.\r\n */\r\nfunction isAndroid(navigator: Navigator): boolean {\r\n  return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\r\n}\r\n\r\n// tslint:disable:directive-class-suffix\r\n// tslint:disable:directive-selector\r\n\r\n// TODO: since this directive has a side-effect (setting the element's id attribute)\r\n// it should not blacklist other types of inputs but instead it should somehow figure\r\n// out whether it is the \"active\" view adapter and only perform its side effects if it\r\n// is active\r\n@Directive({\r\n  selector: 'input:not([type=checkbox]):not([type=number]):not([type=radio]):not([type=range])[ngrxFormControlState],textarea[ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxDefaultViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxDefaultViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  /** Whether the user is creating a composition string (IME events). */\r\n  private isComposing = false;\r\n  private isCompositionSupported: boolean;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    @Optional() @Inject(PLATFORM_ID) private platformId: string | null = null,\r\n    // we use a special injection string that should never exist at runtime to allow mocking this dependency for testing\r\n    @Optional() @Inject('ngrx-forms/never') navigator: Navigator | null = null,\r\n  ) {\r\n    this.isCompositionSupported = isPlatformBrowser(this.platformId || '') && !isAndroid(navigator || window.navigator);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    const normalizedValue = value == null ? '' : value;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    if (this.isCompositionSupported && this.isComposing) {\r\n      return;\r\n    }\r\n\r\n    this.onChange(target.value);\r\n  }\r\n\r\n  @HostListener('compositionstart')\r\n  compositionStart(): void {\r\n    this.isComposing = true;\r\n  }\r\n\r\n  @HostListener('compositionend', ['$event'])\r\n  compositionEnd({ target }: { target: HTMLInputElement }): void {\r\n    this.isComposing = false;\r\n    if (this.isCompositionSupported) {\r\n      this.onChange(target.value);\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=number][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxNumberViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxNumberViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\r\n    const normalizedValue = value === null ? '' : value;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    const value = target.value;\r\n    this.onChange(value === '' ? null : parseFloat(value));\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'select:not([multiple])[ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxSelectViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxSelectViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private optionMap: { [id: string]: any } = {};\r\n  private idCounter = 0;\r\n  private selectedId: string | null = null;\r\n  private value: any = undefined;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChangeFn: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any) {\r\n    this.value = value;\r\n    this.selectedId = this.getOptionId(value);\r\n    if (this.selectedId === null) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\r\n    }\r\n\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  onChange({ target }: { target: HTMLOptionElement }) {\r\n    this.selectedId = target.value;\r\n    const value = this.optionMap[this.selectedId];\r\n    this.value = value;\r\n    this.onChangeFn(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void) {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  createOptionId() {\r\n    const id = this.idCounter.toString();\r\n    this.idCounter += 1;\r\n    return id;\r\n  }\r\n\r\n  updateOptionValue(id: string, value: any) {\r\n    this.optionMap[id] = value;\r\n\r\n    if (this.selectedId === id) {\r\n      this.onChangeFn(value);\r\n    } else if (value === this.value) {\r\n      this.setViewValue(value);\r\n    }\r\n  }\r\n\r\n  deregisterOption(id: string) {\r\n    delete this.optionMap[id];\r\n  }\r\n\r\n  private getOptionId(value: any) {\r\n    for (const id of Array.from(Object.keys(this.optionMap))) {\r\n      if (this.optionMap[id] === value) {\r\n        return id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst NULL_VIEW_ADAPTER: NgrxSelectViewAdapter = {\r\n  createOptionId: () => '',\r\n  deregisterOption: () => void 0,\r\n  updateOptionValue: () => void 0,\r\n} as any;\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxSelectOption implements OnDestroy {\r\n  private isInitialized = false;\r\n  id: string;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() private viewAdapter: NgrxSelectViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER;\r\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\r\n    this.id = this.viewAdapter.createOptionId();\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    // this cannot be done inside ngOnInit since the value property\r\n    // must be already set when the option value is updated in the view\r\n    // adapter and the initial binding of 'value' happens before\r\n    // ngOnInit runs\r\n    if (!this.isInitialized) {\r\n      this.isInitialized = true;\r\n      this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\r\n    }\r\n\r\n    this.viewAdapter.updateOptionValue(this.id, value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewAdapter.deregisterOption(this.id);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'select[multiple][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxSelectMultipleViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private options: { [id: string]: NgrxSelectMultipleOption } = {};\r\n  private optionValues: { [id: string]: any } = {};\r\n  private idCounter = 0;\r\n  private selectedIds: string[] = [];\r\n  private nativeIdWasSet = false;\r\n\r\n  onChangeFn: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any) {\r\n    if (value === null) {\r\n      value = [];\r\n    }\r\n\r\n    if (!Array.isArray(value)) {\r\n      throw new Error(`the value provided to a NgrxSelectMultipleViewAdapter must be null or an array; got ${value} of type ${typeof value}`); // `\r\n    }\r\n\r\n    this.selectedIds = value.map(v => this.getOptionId(v)).filter(id => id !== null).map(id => id as string);\r\n    Object.keys(this.options).forEach(id => this.options[id].isSelected = this.selectedIds.indexOf(id) >= 0);\r\n  }\r\n\r\n  @HostListener('change')\r\n  onChange() {\r\n    this.selectedIds = Object.keys(this.options).filter(id => this.options[id].isSelected);\r\n    const value = this.selectedIds.map(id => this.optionValues[id]);\r\n    this.onChangeFn(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void) {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  registerOption(option: NgrxSelectMultipleOption) {\r\n    const id = this.idCounter.toString();\r\n    this.options[id] = option;\r\n    this.idCounter += 1;\r\n    return id;\r\n  }\r\n\r\n  updateOptionValue(id: string, value: any) {\r\n    this.optionValues[id] = value;\r\n\r\n    if (this.selectedIds.indexOf(id) >= 0) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  deregisterOption(id: string) {\r\n    delete this.options[id];\r\n    delete this.optionValues[id];\r\n  }\r\n\r\n  private getOptionId(value: any) {\r\n    for (const id of Array.from(Object.keys(this.optionValues))) {\r\n      if (this.optionValues[id] === value) {\r\n        return id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst NULL_VIEW_ADAPTER: NgrxSelectMultipleViewAdapter = {\r\n  registerOption: () => '',\r\n  deregisterOption: () => void 0,\r\n  updateOptionValue: () => void 0,\r\n} as any;\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxSelectMultipleOption implements OnInit, OnDestroy {\r\n  id: string;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() private viewAdapter: NgrxSelectMultipleViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER;\r\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\r\n    this.id = this.viewAdapter.registerOption(this);\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this.viewAdapter.updateOptionValue(this.id, value);\r\n  }\r\n\r\n  set isSelected(selected: boolean) {\r\n    this.renderer.setProperty(this.element.nativeElement, 'selected', selected);\r\n  }\r\n\r\n  get isSelected() {\r\n    return (this.element.nativeElement as HTMLOptionElement).selected;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewAdapter.deregisterOption(this.id);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { NgrxSelectViewAdapter } from './select';\r\nimport { NgrxSelectMultipleViewAdapter } from './select-multiple';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n/**\r\n * This directive is necessary to restore the default behaviour of Angular\r\n * when an `option` is used without an **ngrx-forms** form state. Since it\r\n * is not possible to select an element with a selector that considers its\r\n * parent the `option` directives for `select` and `select[multiple]` will\r\n * always be applied and therefore overriding the `[value]` binding which\r\n * disabled Angular's normal behaviour. This directive restores this\r\n * behaviour if no `select` or `select[multiple]` view adapter is found.\r\n * This is not a perfect solution since it may interfere with other\r\n * directives that try to set the `[value]` but that is very unlikely.\r\n */\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxFallbackSelectOption {\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() viewAdapter: NgrxSelectViewAdapter,\r\n    @Host() @Optional() multipleViewAdapter: NgrxSelectMultipleViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter || multipleViewAdapter ? NULL_RENDERER : renderer;\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', value);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=radio][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxRadioViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxRadioViewAdapter implements FormViewAdapter, OnInit, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeNameWasSet = false;\r\n\r\n  @Input() set value(val: any) {\r\n    if (val !== this.latestValue) {\r\n      this.latestValue = val;\r\n      if (this.isChecked) {\r\n        this.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeName = this.elementRef.nativeElement.name;\r\n    const shouldSetNativeName = value.id !== nativeName && this.nativeNameWasSet;\r\n    if (shouldSetNativeName) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', value.id);\r\n    }\r\n  }\r\n\r\n  private latestValue: any;\r\n  private isChecked: boolean;\r\n\r\n  @HostListener('change')\r\n  onChange: () => void = () => void 0\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isChecked = (this.elementRef.nativeElement as HTMLInputElement).checked;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeName = this.elementRef.nativeElement.name;\r\n    const shouldSetNativeName = this.state.id !== nativeName && !nativeName;\r\n    if (shouldSetNativeName) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', this.state.id);\r\n      this.nativeNameWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.isChecked = value === this.latestValue;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', this.isChecked);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (_: any) => void): void {\r\n    this.onChange = () => fn(this.latestValue);\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=range][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxRangeViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxRangeViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    const value = target.value;\r\n    this.onChange(value === '' ? null : parseFloat(value));\r\n  }\r\n}\r\n","import { NgrxCheckboxViewAdapter } from './checkbox';\r\nimport { NgrxDefaultViewAdapter } from './default';\r\nimport { NgrxNumberViewAdapter } from './number';\r\nimport { NgrxRadioViewAdapter } from './radio';\r\nimport { NgrxRangeViewAdapter } from './range';\r\nimport { NgrxSelectViewAdapter } from './select';\r\nimport { NgrxSelectMultipleViewAdapter } from './select-multiple';\r\nimport { FormViewAdapter } from './view-adapter';\r\n\r\nconst BUILTIN_ADAPTERS = [\r\n  NgrxCheckboxViewAdapter,\r\n  NgrxRangeViewAdapter,\r\n  NgrxNumberViewAdapter,\r\n  NgrxSelectViewAdapter,\r\n  NgrxSelectMultipleViewAdapter,\r\n  NgrxRadioViewAdapter,\r\n];\r\n\r\nexport function isBuiltInViewAdapter(viewAdapter: FormViewAdapter): boolean {\r\n  return BUILTIN_ADAPTERS.some(a => viewAdapter.constructor === a);\r\n}\r\n\r\nexport function selectViewAdapter(viewAdapters: FormViewAdapter[]): FormViewAdapter {\r\n  if (!viewAdapters) {\r\n    throw new Error('No view adapter matches!');\r\n  }\r\n\r\n  let defaultAdapter: FormViewAdapter | undefined;\r\n  let builtinAdapter: FormViewAdapter | undefined;\r\n  let customAdapter: FormViewAdapter | undefined;\r\n  viewAdapters.forEach((v: FormViewAdapter) => {\r\n    if (v.constructor === NgrxDefaultViewAdapter) {\r\n      defaultAdapter = v;\r\n    } else if (isBuiltInViewAdapter(v)) {\r\n      if (builtinAdapter) {\r\n        throw new Error('More than one built-in view adapter matches!');\r\n      }\r\n\r\n      builtinAdapter = v;\r\n    } else {\r\n      if (customAdapter) {\r\n        throw new Error('More than one custom view adapter matches!');\r\n      }\r\n\r\n      customAdapter = v;\r\n    }\r\n  });\r\n\r\n  if (customAdapter) {\r\n    return customAdapter;\r\n  }\r\n\r\n  if (builtinAdapter) {\r\n    return builtinAdapter;\r\n  }\r\n\r\n  if (defaultAdapter) {\r\n    return defaultAdapter;\r\n  }\r\n\r\n  throw new Error('No valid view adapter!');\r\n}\r\n","import { box, Boxed, unbox } from '../boxing';\r\n\r\nexport interface NgrxValueConverter<TView, TState> {\r\n  convertViewToStateValue(value: TView): TState;\r\n  convertStateToViewValue(value: TState): TView;\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nexport const NgrxValueConverters = {\r\n  default<T>() {\r\n    return {\r\n      convertViewToStateValue: value => typeof value === 'object' && value !== null ? box(value) : value,\r\n      convertStateToViewValue: unbox,\r\n    } as NgrxValueConverter<T, Boxed<T> | T>;\r\n  },\r\n  dateToISOString: {\r\n    convertViewToStateValue: date => date === null ? null : date.toISOString(),\r\n    convertStateToViewValue: s => s === null ? null : new Date(Date.parse(s)),\r\n  } as NgrxValueConverter<Date | null, string | null>,\r\n  objectToJSON: {\r\n    convertViewToStateValue: value => value === null ? null : JSON.stringify(value),\r\n    convertStateToViewValue: s => s === null ? null : JSON.parse(s),\r\n  } as NgrxValueConverter<{} | null, string | null>,\r\n};\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ActionsSubject } from '@ngrx/store';\r\n\r\nimport { Actions, FocusAction, MarkAsDirtyAction, MarkAsTouchedAction, SetValueAction, UnfocusAction } from '../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\nimport { selectViewAdapter } from '../view-adapter/util';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from '../view-adapter/view-adapter';\r\nimport { NgrxValueConverter, NgrxValueConverters } from './value-converter';\r\n\r\nexport interface Document {\r\n  activeElement: any;\r\n}\r\n\r\nexport enum NGRX_UPDATE_ON_TYPE {\r\n  CHANGE = 'change',\r\n  BLUR = 'blur',\r\n  NEVER = 'never',\r\n}\r\n\r\nclass ControlValueAccessorAdapter implements FormViewAdapter {\r\n  constructor(private valueAccessor: ControlValueAccessor) { }\r\n\r\n  setViewValue(value: any): void {\r\n    this.valueAccessor.writeValue(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.valueAccessor.registerOnChange(fn);\r\n  }\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.valueAccessor.registerOnTouched(fn);\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    if (this.valueAccessor.setDisabledState) {\r\n      this.valueAccessor.setDisabledState(isDisabled);\r\n    }\r\n  }\r\n}\r\n\r\nexport type NgrxFormControlValueType<TStateValue> = TStateValue extends FormControlValueTypes ? TStateValue : never;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: ':not([ngrxFormsAction])[ngrxFormControlState]',\r\n})\r\nexport class NgrxFormControlDirective<TStateValue, TViewValue = TStateValue> implements AfterViewInit, OnInit {\r\n  private isInitialized = false;\r\n  private focusTrackingIsEnabled = false;\r\n\r\n  @Input() set ngrxFormControlState(newState: FormControlState<NgrxFormControlValueType<TStateValue>>) {\r\n    if (!newState) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    const oldState = this.state;\r\n    this.state = newState;\r\n\r\n    if (this.isInitialized) {\r\n      this.updateViewIfControlIdChanged(newState, oldState);\r\n      this.updateViewIfValueChanged(newState, oldState);\r\n      this.updateViewIfIsDisabledChanged(newState, oldState);\r\n      this.updateViewIfIsFocusedChanged(newState, oldState);\r\n    }\r\n  }\r\n\r\n  @Input() ngrxUpdateOn: NGRX_UPDATE_ON_TYPE = NGRX_UPDATE_ON_TYPE.CHANGE;\r\n  @Input() set ngrxEnableFocusTracking(value: boolean) {\r\n    if (value && !this.dom) {\r\n      throw new Error('focus tracking is only supported on the browser platform');\r\n    }\r\n\r\n    this.focusTrackingIsEnabled = value;\r\n  }\r\n\r\n  @Input() ngrxValueConverter: NgrxValueConverter<TViewValue, TStateValue> = NgrxValueConverters.default<any>();\r\n\r\n  // TODO: move this into a separate directive\r\n  // automatically apply the attribute that's used by the CDK to set initial focus\r\n  @HostBinding('attr.cdk-focus-region-start') get focusRegionStartAttr() {\r\n    return this.state && this.state.isFocused ? '' : null;\r\n  }\r\n\r\n  state: FormControlState<NgrxFormControlValueType<TStateValue>>;\r\n\r\n  private viewAdapter: FormViewAdapter;\r\n\r\n  // we have to store the latest known state value since most input elements don't play nicely with\r\n  // setting the same value again (e.g. input elements move the cursor to the end of the input when\r\n  // a new value is set which means whenever the user types something the cursor is forced to the\r\n  // end of the input) which would for example happen every time a new value is pushed to the state\r\n  // since when the action to update the state is dispatched a new state will be received inside\r\n  // the directive, which in turn would trigger a view update; to prevent this behavior we compare\r\n  // the latest known state value with the value to be set and filter out those values that are equal\r\n  // to the latest known value\r\n  private viewValue: TViewValue;\r\n  private stateValue: TStateValue;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    // for the dom parameter the `null` type must be last to ensure that in the compiled output\r\n    // there is no reference to the Document type to support non-browser platforms\r\n    @Optional() @Inject(DOCUMENT) private dom: Document | null,\r\n    @Optional() @Inject(ActionsSubject) private actionsSubject: ActionsSubject | null,\r\n    @Self() @Optional() @Inject(NGRX_FORM_VIEW_ADAPTER) viewAdapters: FormViewAdapter[],\r\n    @Self() @Optional() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\r\n  ) {\r\n    viewAdapters = viewAdapters || [];\r\n    valueAccessors = valueAccessors || [];\r\n\r\n    if (valueAccessors.length > 1) {\r\n      throw new Error('More than one custom control value accessor matches!');\r\n    }\r\n\r\n    this.viewAdapter = valueAccessors.length > 0\r\n      ? new ControlValueAccessorAdapter(valueAccessors[0])\r\n      : selectViewAdapter(viewAdapters);\r\n  }\r\n\r\n  updateViewIfControlIdChanged(\r\n    newState: FormControlState<NgrxFormControlValueType<TStateValue>>,\r\n    oldState: FormControlState<NgrxFormControlValueType<TStateValue>> | undefined,\r\n  ) {\r\n    if (oldState && newState.id === oldState.id) {\r\n      return;\r\n    }\r\n\r\n    this.stateValue = newState.value;\r\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(this.stateValue);\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n    if (this.viewAdapter.setIsDisabled) {\r\n      this.viewAdapter.setIsDisabled(newState.isDisabled);\r\n    }\r\n  }\r\n\r\n  updateViewIfValueChanged(\r\n    newState: FormControlState<NgrxFormControlValueType<TStateValue>>,\r\n    _: FormControlState<NgrxFormControlValueType<TStateValue>> | undefined,\r\n  ) {\r\n    if (newState.value === this.stateValue) {\r\n      return;\r\n    }\r\n\r\n    this.stateValue = newState.value;\r\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(newState.value);\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n  }\r\n\r\n  updateViewIfIsDisabledChanged(\r\n    newState: FormControlState<NgrxFormControlValueType<TStateValue>>,\r\n    oldState: FormControlState<NgrxFormControlValueType<TStateValue>> | undefined,\r\n  ) {\r\n    if (!this.viewAdapter.setIsDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (oldState && newState.isDisabled === oldState.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    this.viewAdapter.setIsDisabled(newState.isDisabled);\r\n  }\r\n\r\n  updateViewIfIsFocusedChanged(\r\n    newState: FormControlState<NgrxFormControlValueType<TStateValue>>,\r\n    oldState: FormControlState<NgrxFormControlValueType<TStateValue>> | undefined,\r\n  ) {\r\n    if (!this.focusTrackingIsEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (oldState && newState.isFocused === oldState.isFocused) {\r\n      return;\r\n    }\r\n\r\n    if (newState.isFocused) {\r\n      this.el.nativeElement.focus();\r\n    } else {\r\n      this.el.nativeElement.blur();\r\n    }\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<NgrxFormControlValueType<TStateValue>>) {\r\n    if (this.actionsSubject !== null) {\r\n      this.actionsSubject.next(action);\r\n    } else {\r\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.state) {\r\n      throw new Error('The form state must not be undefined!');\r\n    }\r\n\r\n    this.isInitialized = true;\r\n\r\n    this.updateViewIfControlIdChanged(this.state, undefined);\r\n    this.updateViewIfValueChanged(this.state, undefined);\r\n    this.updateViewIfIsDisabledChanged(this.state, undefined);\r\n    this.updateViewIfIsFocusedChanged(this.state, undefined);\r\n\r\n    const dispatchMarkAsDirtyAction = () => {\r\n      if (this.state.isPristine) {\r\n        this.dispatchAction(new MarkAsDirtyAction(this.state.id));\r\n      }\r\n    };\r\n\r\n    const dispatchSetValueAction = () => {\r\n      this.stateValue = this.ngrxValueConverter.convertViewToStateValue(this.viewValue);\r\n      if (this.stateValue !== this.state.value) {\r\n        this.dispatchAction(new SetValueAction(this.state.id, this.stateValue as NgrxFormControlValueType<TStateValue>));\r\n\r\n        dispatchMarkAsDirtyAction();\r\n      }\r\n    };\r\n\r\n    this.viewAdapter.setOnChangeCallback((viewValue: TViewValue) => {\r\n      this.viewValue = viewValue;\r\n\r\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.CHANGE) {\r\n        dispatchSetValueAction();\r\n      }\r\n    });\r\n\r\n    this.viewAdapter.setOnTouchedCallback(() => {\r\n      if (!this.state.isTouched && this.ngrxUpdateOn !== NGRX_UPDATE_ON_TYPE.NEVER) {\r\n        this.dispatchAction(new MarkAsTouchedAction(this.state.id));\r\n      }\r\n\r\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.BLUR) {\r\n        dispatchSetValueAction();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // we need to update the view again after it was initialized since some\r\n    // controls depend on child elements for setting the value (e.g. selects)\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n    if (this.viewAdapter.setIsDisabled) {\r\n      this.viewAdapter.setIsDisabled(this.state.isDisabled);\r\n    }\r\n  }\r\n\r\n  @HostListener('focusin')\r\n  @HostListener('focusout')\r\n  onFocusChange() {\r\n    if (!this.focusTrackingIsEnabled) {\r\n      return;\r\n    }\r\n\r\n    const isControlFocused = this.el.nativeElement === this.dom!.activeElement;\r\n    if (isControlFocused !== this.state.isFocused) {\r\n      this.dispatchAction(isControlFocused ? new FocusAction(this.state.id) : new UnfocusAction(this.state.id));\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Actions } from '../actions';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from '../view-adapter/view-adapter';\r\nimport { Document, NgrxFormControlDirective, NgrxFormControlValueType } from './directive';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[ngrxFormControlState][ngrxFormsAction]',\r\n})\r\nexport class NgrxLocalFormControlDirective<TStateValue, TViewValue = TStateValue>\r\n  extends NgrxFormControlDirective<TStateValue, TViewValue> {\r\n\r\n  @Output() ngrxFormsAction = new EventEmitter<Actions<NgrxFormControlValueType<TStateValue>>>();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    @Optional() @Inject(DOCUMENT) dom: Document | null,\r\n    @Self() @Optional() @Inject(NGRX_FORM_VIEW_ADAPTER) viewAdapters: FormViewAdapter[],\r\n    @Self() @Optional() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\r\n  ) {\r\n    super(el, dom, null, viewAdapters, valueAccessors);\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<NgrxFormControlValueType<TStateValue>>) {\r\n    this.ngrxFormsAction.emit(action);\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject, Input, OnInit, Optional } from '@angular/core';\r\nimport { ActionsSubject } from '@ngrx/store';\r\n\r\nimport { Actions, MarkAsSubmittedAction } from '../actions';\r\nimport { FormGroupState, KeyValue } from '../state';\r\n\r\n// this interface just exists to prevent a direct reference to\r\n// `Event` in our code, which otherwise causes issues in NativeScript\r\n// applications\r\ninterface CustomEvent extends Event { }\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form:not([ngrxFormsAction])[ngrxFormState]',\r\n})\r\nexport class NgrxFormDirective<TStateValue extends KeyValue> implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('ngrxFormState') state: FormGroupState<TStateValue>;\r\n\r\n  constructor(\r\n    @Optional() @Inject(ActionsSubject) private actionsSubject: ActionsSubject | null\r\n  ) {\r\n    this.actionsSubject = actionsSubject;\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TStateValue>) {\r\n    if (this.actionsSubject !== null) {\r\n      this.actionsSubject.next(action);\r\n    } else {\r\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.state) {\r\n      throw new Error('The form state must not be undefined!');\r\n    }\r\n  }\r\n\r\n  @HostListener('submit', ['$event'])\r\n  onSubmit(event: CustomEvent) {\r\n    event.preventDefault();\r\n    if (this.state.isUnsubmitted) {\r\n      this.dispatchAction(new MarkAsSubmittedAction(this.state.id));\r\n    }\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { Actions } from '../actions';\r\nimport { KeyValue } from '../state';\r\nimport { NgrxFormDirective } from './directive';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[ngrxFormState][ngrxFormsAction]',\r\n})\r\nexport class NgrxLocalFormDirective<TStateValue extends KeyValue> extends NgrxFormDirective<TStateValue> {\r\n\r\n  @Output() ngrxFormsAction = new EventEmitter<Actions<TStateValue>>();\r\n\r\n  constructor() {\r\n    super(null);\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TStateValue>) {\r\n    this.ngrxFormsAction.emit(action);\r\n  }\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControlState } from './state';\r\n\r\n/**\r\n * Lists the available status class names based on the property\r\n * they are depending on.\r\n */\r\nexport const NGRX_STATUS_CLASS_NAMES = {\r\n  isValid: 'ngrx-forms-valid',\r\n  isInvalid: 'ngrx-forms-invalid',\r\n  isDirty: 'ngrx-forms-dirty',\r\n  isPristine: 'ngrx-forms-pristine',\r\n  isTouched: 'ngrx-forms-touched',\r\n  isUntouched: 'ngrx-forms-untouched',\r\n  isSubmitted: 'ngrx-forms-submitted',\r\n  isUnsubmitted: 'ngrx-forms-unsubmitted',\r\n  isValidationPending: 'ngrx-forms-validation-pending',\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[ngrxFormState],[ngrxFormControlState]',\r\n})\r\nexport class NgrxStatusCssClassesDirective {\r\n  private state: AbstractControlState<any>;\r\n\r\n  @Input()\r\n  set ngrxFormControlState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @Input()\r\n  set ngrxFormState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValid}`)\r\n  get isValid() {\r\n    return this.state.isValid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isInvalid}`)\r\n  get isInvalid() {\r\n    return this.state.isInvalid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isDirty}`)\r\n  get isDirty() {\r\n    return this.state.isDirty;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isPristine}`)\r\n  get isPristine() {\r\n    return this.state.isPristine;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isTouched}`)\r\n  get isTouched() {\r\n    return this.state.isTouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUntouched}`)\r\n  get isUntouched() {\r\n    return this.state.isUntouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isSubmitted}`)\r\n  get isSubmitted() {\r\n    return this.state.isSubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUnsubmitted}`)\r\n  get isUnsubmitted() {\r\n    return this.state.isUnsubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValidationPending}`)\r\n  get isValidationPending() {\r\n    return this.state.isValidationPending;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgrxFormControlDirective } from './control/directive';\r\nimport { NgrxLocalFormControlDirective } from './control/local-state-directive';\r\nimport { NgrxFormDirective } from './group/directive';\r\nimport { NgrxLocalFormDirective } from './group/local-state-directive';\r\nimport { NgrxStatusCssClassesDirective } from './status-css-classes.directive';\r\nimport { NgrxCheckboxViewAdapter } from './view-adapter/checkbox';\r\nimport { NgrxDefaultViewAdapter } from './view-adapter/default';\r\nimport { NgrxNumberViewAdapter } from './view-adapter/number';\r\nimport { NgrxFallbackSelectOption } from './view-adapter/option';\r\nimport { NgrxRadioViewAdapter } from './view-adapter/radio';\r\nimport { NgrxRangeViewAdapter } from './view-adapter/range';\r\nimport { NgrxSelectOption, NgrxSelectViewAdapter } from './view-adapter/select';\r\nimport { NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter } from './view-adapter/select-multiple';\r\n\r\nconst exportsAndDeclarations = [\r\n  NgrxFormControlDirective,\r\n  NgrxLocalFormControlDirective,\r\n  NgrxFormDirective,\r\n  NgrxLocalFormDirective,\r\n  NgrxCheckboxViewAdapter,\r\n  NgrxDefaultViewAdapter,\r\n  NgrxNumberViewAdapter,\r\n  NgrxRadioViewAdapter,\r\n  NgrxRangeViewAdapter,\r\n  NgrxSelectMultipleOption,\r\n  NgrxSelectMultipleViewAdapter,\r\n  NgrxSelectOption,\r\n  NgrxSelectViewAdapter,\r\n  NgrxFallbackSelectOption,\r\n  NgrxStatusCssClassesDirective,\r\n];\r\n\r\n@NgModule({\r\n  declarations: exportsAndDeclarations,\r\n  exports: exportsAndDeclarations,\r\n})\r\nexport class NgrxFormsModule { }\r\n","/**\r\n * ngrx-forms\r\n * Proper integration of forms in Angular applications using Ngrx\r\n * Written by Jonathan Ziller.\r\n * MIT license.\r\n * https://github.com/MrWolfZ/ngrx-forms\r\n */\r\nexport * from './src/ngrx-forms';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["clearAsyncErrorReducer","disableReducer","enableReducer","markAsDirtyReducer","markAsPristineReducer","markAsSubmittedReducer","markAsTouchedReducer","markAsUnsubmittedReducer","markAsUntouchedReducer","resetReducer","setAsyncErrorReducer","setErrorsReducer","setUserDefinedPropertyReducer","setValueReducer","startAsyncValidationReducer","dispatchActionPerChild","callChildReducers","childReducer","addControlReducer","removeControlReducer","InjectionToken","forwardRef","Directive","HostListener","Input","isPlatformBrowser","PLATFORM_ID","Optional","Inject","NULL_VIEW_ADAPTER","NULL_RENDERER","Host","NGRX_UPDATE_ON_TYPE","DOCUMENT","ActionsSubject","NG_VALUE_ACCESSOR","Self","HostBinding","EventEmitter","Output","NgModule"],"mappings":"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"}